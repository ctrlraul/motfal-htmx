{
  "version": 3,
  "sources": ["../src/routers/game-router.tsx", "../src/helpers/escape-html.ts", "../src/jsx.ts", "../src/html/components/Style.tsx", "../src/html/CookiesPopup.tsx", "../src/html/Root.tsx", "../src/html/MainHeader.tsx", "../src/html/icons.tsx", "../src/helpers/import-text.ts", "../src/helpers/env.ts", "../src/helpers/omit.ts", "../src/html/components/FromHtml.tsx", "../src/html/components/Svg.tsx", "../src/html/pages/home/NickSection.tsx", "../src/html/components/LoadingSpinner.tsx", "../src/html/pages/home/style.css", "../src/html/pages/home/Page.tsx", "../src/html/pages/rules/style.css", "../src/html/pages/rules/page.tsx", "../src/articles/domains/pokeapi.co.ts", "../src/articles/domains/wikipedia.org.ts", "../src/articles/domains/wiktionary.org.ts", "../src/articles/articles-helper.ts", "../src/html/pages/make/style.css", "../src/html/pages/make/Page.tsx", "../src/helpers/object-length.ts", "../src/html/pages/room/guesser/UsersCount.tsx", "../src/helpers/logger.ts", "../src/helpers/random-string.ts", "../src/helpers/token-helper.ts", "../src/middlewares/session-parser.ts", "../src/managers/event-sender.ts", "../src/html/pages/room/guesser/UsersListItem.tsx", "../src/html/pages/room/guesser/ArticlesCounter.tsx", "../src/html/ArticleTitle.tsx", "../src/html/pages/room/started/StartedView.tsx", "../src/html/pages/room/guesser/StartButton.tsx", "../src/html/pages/room/started/invite.css", "../src/html/pages/room/started/InvitePopup.tsx", "../src/managers/rooms-manager.tsx", "../src/html/pages/room/liar/SuggestionsListItem.tsx", "../src/html/pages/room/liar/ArticleSubmitted.tsx", "../src/html/pages/room/RoomHeader.tsx", "../src/html/pages/room/liar/liar.css", "../src/html/pages/room/liar/LiarView.tsx", "../src/html/pages/room/guesser/UsersList.tsx", "../src/html/pages/room/guesser/guesser.css", "../src/html/pages/room/guesser/GuesserView.tsx", "../src/html/components/Script.tsx", "../src/html/components/Json.tsx", "../src/html/pages/room/RulesPopup.tsx", "../src/html/pages/room/Page.tsx", "../src/html/pages/room/style.css", "../src/main.ts"],
  "sourcesContent": ["import { Router, urlencoded } from 'express';\r\nimport { Home } from '@html/pages/home/Page';\r\nimport { Rules } from '@html/pages/rules/page';\r\nimport { MakeRoom } from '@html/pages/make/Page';\r\nimport { RoomsManager } from '../managers/rooms-manager';\r\nimport { SessionParser } from '../middlewares/session-parser';\r\nimport { SuggestionsListItem } from '@html/pages/room/liar/SuggestionsListItem';\r\nimport { ArticleSubmitted } from '@html/pages/room/liar/ArticleSubmitted';\r\nimport { Room } from '@html/pages/room/Page';\r\nimport { ArticlesHelper } from '../articles/articles-helper';\r\nimport { jsx, render } from '@jsx';\r\nimport { RoomStarted } from '@html/pages/room/started/StartedView';\r\nimport { NickSection } from '@html/pages/home/NickSection';\r\n\r\n\r\nconst NickLengthMax = 32;\r\nconst ArticlesPerRequest = 16;\r\n\r\nconst router = Router();\r\n\r\n\r\nrouter.use(urlencoded({ extended: true }));\r\nrouter.use(SessionParser.middleware);\r\n\r\n\r\nrouter.get('/', (req, res) => {\r\n\r\n\tconst { user } = req.session;\r\n\tconst room = RoomsManager.getUserRoom(user.id);\r\n\r\n\tif (room) {\r\n\t\tres.redirect('/room');\r\n\t\treturn;\r\n\t}\r\n\r\n\tres.type('text/html');\r\n\tres.send(render(\r\n\t\t<Home user={user} />\r\n\t));\r\n});\r\n\r\nrouter.post('/cookies/accept', (req, res) => {\r\n\treq.session.save(res, { acceptedCookies: true });\r\n\tres.type('text/html');\r\n\tres.send();\r\n});\r\n\r\nrouter.post('/cookies/reject', (req, res) => {\r\n\r\n\tconst { user } = req.session;\r\n\tconst room = RoomsManager.getUserRoom(user.id);\r\n\r\n\tif (room)\r\n\t\tRoomsManager.removeUserFromRoom(room, user.id);\r\n\r\n\tres.clearCookie(SessionParser.cookieName);\r\n\tres.header('Hx-Redirect', 'https://www.google.com/');\r\n});\r\n\r\nrouter.get('/nick-change', (req, res) => {\r\n\tres.type('text/html');\r\n\tres.send(render(\r\n\t\t<form id='nick'\r\n\t\t\thx-post='/nick-change'\r\n\t\t\thx-swap='outerHTML'\r\n\t\t\thx-trigger='submit'>\r\n\r\n\t\t\t<input type='text'\r\n\t\t\t\tname='nick'\r\n\t\t\t\tplaceholder='New nick'\r\n\t\t\t\tvalue={req.session.user.nick}\r\n\t\t\t\tmax={NickLengthMax}/>\r\n\r\n\t\t\t<button class='cancel' type='submit'>\r\n\t\t\t\tCancel\r\n\t\t\t</button>\r\n\r\n\t\t\t<button class='ok' type='submit'>\r\n\t\t\t\tOk\r\n\t\t\t</button>\r\n\t\t</form>\r\n\t));\r\n});\r\n\r\nrouter.post('/nick-change', async (req, res) => {\r\n\t\r\n\tconst { user } = req.session;\r\n\tconst nick = String(req.body['nick'] || '').slice(0, NickLengthMax);\r\n\r\n\tif (nick != '' && nick != user.nick)\r\n\t\treq.session.save(res, { nick });\r\n\r\n\tres.type('text/html');\r\n\tres.send(render(<NickSection nick={user.nick} />));\r\n});\r\n\r\nrouter.get('/rules', (req, res) => {\r\n\tres.type('text/html');\r\n\tres.send(render(<Rules user={req.session.user}/>));\r\n});\r\n\r\nrouter.get('/make', (req, res) => {\r\n\tconst { user } = req.session;\r\n\tconst currentRoom = RoomsManager.getUserRoom(user.id);\r\n\tres.type('text/html');\r\n\tres.send(render(<MakeRoom currentRoom={currentRoom} user={user} />));\r\n});\r\n\r\nrouter.post('/make', async (req, res) => {\r\n\r\n\tconst { user } = req.session;\r\n\r\n\tconst domainName = req.body['domain'];\r\n\tconst limitUsers = req.body['limit-users'] === 'on';\r\n\tconst usersLimit = parseInt(String(req.body['users-limit'])) || 0;\r\n\tconst invite     = req.body['invite'] === 'on';\r\n\r\n\tif (!ArticlesHelper.isDomainRegistered(domainName))\r\n\t{\r\n\t\tres.status(404);\r\n\t\tres.send('Invalid domain');\r\n\t\treturn;\r\n\t}\r\n\r\n\tif (limitUsers && usersLimit < 3)\r\n\t{\r\n\t\tres.status(404);\r\n\t\tres.send('Invalid users limit');\r\n\t\treturn;\r\n\t}\r\n\r\n\tconst rules = ArticlesHelper.createRules(domainName!, req.body);\r\n\tconst oldRoom = RoomsManager.getUserRoom(user.id);\r\n\tconst newRoom = RoomsManager.createRoom(user, domainName!, rules, limitUsers ? usersLimit : 0);\r\n\r\n\tif (oldRoom)\r\n\t{\r\n\t\tRoomsManager.removeUserFromRoom(oldRoom, user.id);\r\n\r\n\t\tif (invite && oldRoom.currentArticle != -1)\r\n\t\t\tRoomsManager.inviteToNewRoom(oldRoom, user, newRoom);\r\n\t}\r\n\t\r\n\tres.redirect('/room');\r\n});\r\n\r\nrouter.get('/room', (req, res) => {\r\n\r\n\tconst { user } = req.session;\r\n\tconst room = RoomsManager.getUserRoom(user.id);\r\n\r\n\tif (room == null) {\r\n\t\tconsole.log(`[${req.path}]`, user.nick, '-> Not in a room');\r\n\t\tres.redirect('/');\r\n\t\treturn;\r\n\t}\r\n\r\n\tres.type('text/html');\r\n\tres.send(render(\r\n\t\t<Room room={room} user={user} />\r\n\t));\r\n});\r\n\r\nrouter.post('/join', async (req, res) => {\r\n\t\r\n\tconst code = req.body['code'];\r\n\tconst id = String(code || '').split('/').pop();\r\n\t\r\n\tif (!id) {\r\n\t\tconsole.log(`[${req.path}]`, req.session.user.nick, '-> Invalid code:', code);\r\n\t\tres.redirect('/');\r\n\t\treturn;\r\n\t}\r\n\r\n\tres.redirect('/join/' + id);\r\n});\r\n\r\nrouter.get('/join/:id', (req, res) => {\r\n\t\r\n\tconst { user } = req.session;\r\n\tconst currentRoom = RoomsManager.getUserRoom(user.id);\r\n\tconst roomId = req.params.id;\r\n\r\n\tif (currentRoom) {\r\n\r\n\t\tif (currentRoom.id == roomId) {\r\n\t\t\tres.redirect('/room');\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tRoomsManager.removeUserFromRoom(currentRoom, user.id);\r\n\t}\r\n\r\n\tconst room = RoomsManager.getRoom(roomId);\r\n\r\n\tif (!room) { // Room not found page?\r\n\t\tconsole.log(`[${req.path}]`, user.nick, '-> No room with id:', roomId);\r\n\t\tres.redirect('/');\r\n\t\treturn;\r\n\t}\r\n\r\n\tif (room.kicked.includes(user.id)) {\r\n\t\tres.redirect('/');\r\n\t\treturn;\r\n\t}\r\n\r\n\tRoomsManager.addUserToRoom(room, user);\r\n\r\n\tres.redirect('/room');\r\n\r\n});\r\n\r\nrouter.get('/suggestions', async (req, res) => {\r\n\r\n\tconst { user } = req.session;\r\n\tconst room = RoomsManager.getUserRoom(user.id);\r\n\t\r\n\tif (!room) {\r\n\t\tconsole.log(`[${req.path}]`, user.nick, '-> Not in a room');\r\n\t\tres.redirect('/');\r\n\t\treturn;\r\n\t}\r\n\r\n\tconst articleInfos = await ArticlesHelper.getRandomArticles(\r\n\t\troom.domainName,\r\n\t\tArticlesPerRequest,\r\n\t\troom.rules\r\n\t);\r\n\r\n\tres.type('text/html');\r\n\tres.send(render(\r\n\t\tarticleInfos.map(info =>\r\n\t\t\t<SuggestionsListItem {...info} />\r\n\t\t)\r\n\t));\r\n});\r\n\r\nrouter.post('/kick', (req, res) =>\r\n{\r\n\tconst { user } = req.session;\r\n\tconst room = RoomsManager.getUserRoom(user.id);\r\n\r\n\tif (!room) {\r\n\t\tconsole.log(`[${req.path}]`, user.nick, '-> Not in a room');\r\n\t\tres.redirect('/');\r\n\t\treturn;\r\n\t}\r\n\r\n\tif (user.id !== room.guesserId)\r\n\t{\r\n\t\tconsole.log(`[${req.path}]`, user.nick, '-> Only the guesser can kick');\r\n\t\tres.redirect('/');\r\n\t\treturn;\r\n\t}\r\n\r\n\tconst kickId = String(req.query['id']) || '';\r\n\r\n\tif (!RoomsManager.isUserInRoom(room, kickId))\r\n\t{\r\n\t\tconsole.log(`[${req.path}]`, user.nick, '-> User not found');\r\n\t\tres.redirect('/');\r\n\t\treturn;\r\n\t}\r\n\r\n\tRoomsManager.kickUserFromRoom(room, kickId);\r\n\r\n\tres.status(200);\r\n\r\n});\r\n\r\nrouter.post('/submit', async (req, res) => {\r\n\r\n\tconst { user } = req.session;\r\n\tconst room = RoomsManager.getUserRoom(user.id);\r\n\r\n\tif (!room) {\r\n\t\tconsole.log(`[${req.path}]`, user.nick, '-> Not in a room');\r\n\t\tres.redirect('/');\r\n\t\treturn;\r\n\t}\r\n\t\r\n\tif (room.articles.find(article => article.userId == user.id))\r\n\t\tthrow new Error('Already submitted an article');\r\n\r\n\tconst link = req.body['link'];\r\n\r\n\tif (!link)\r\n\t\tthrow new Error('Link can\\'t be empty');\r\n\r\n\tconst article = await ArticlesHelper.getArticle(room.domainName, link);\r\n\r\n\tRoomsManager.addArticleToUserInRoom(room, user.id, article);\r\n\r\n\tres.type('text/html');\r\n\tres.send(render(\r\n\t\t<ArticleSubmitted room={room} article={article} />\r\n\t));\r\n});\r\n\r\nrouter.post('/leave', (req, res) => {\r\n\t\r\n\tconst { user } = req.session;\r\n\tconst room = RoomsManager.getUserRoom(user.id);\r\n\r\n\tif (!room) {\r\n\t\tconsole.log(`[${req.path}]`, user.nick, '-> Not in a room');\r\n\t\tres.redirect('/');\r\n\t\treturn;\r\n\t}\r\n\r\n\tRoomsManager.removeUserFromRoom(room, user.id);\r\n\r\n\tres.redirect('/');\r\n\r\n});\r\n\r\nrouter.post('/start', (req, res) => {\r\n\r\n\tconst { user } = req.session;\r\n\tconst room = RoomsManager.getUserRoom(user.id);\r\n\t\r\n\tif (!room) {\r\n\t\tconsole.log(`[${req.path}]`, user.nick, '-> Not in a room');\r\n\t\tres.redirect('/');\r\n\t\treturn;\r\n\t}\r\n\r\n\tRoomsManager.startRoom(user.id, room);\r\n\t\r\n\tconst article = room.articles[room.currentArticle];\r\n\r\n\tres.type('text/html');\r\n\tres.send(render(\r\n\t\t<RoomStarted article={article} room={room} />\r\n\t));\r\n});\r\n\r\n\r\nexport {\r\n\trouter\r\n}", "/*!\r\n * escape-html\r\n * Copyright(c) 2012-2013 TJ Holowaychuk\r\n * Copyright(c) 2015 Andreas Lubbe\r\n * Copyright(c) 2015 Tiancheng \"Timothy\" Gu\r\n * MIT Licensed\r\n */\r\n\r\n\r\n// Lightly modified for TypeScript\r\n\r\n\r\n'use strict';\r\n\r\n/**\r\n * Module variables.\r\n * @private\r\n */\r\n\r\nconst matchHtmlRegExp = /[\"'&<>]/;\r\n\r\n/**\r\n * Module exports.\r\n * @public\r\n */\r\n\r\nexport default escapeHtml;\r\n\r\n/**\r\n * Escape special characters in the given string of html.\r\n *\r\n * @param  {string} string The string to escape for inserting into HTML\r\n * @return {string}\r\n * @public\r\n */\r\n\r\nfunction escapeHtml(string: string): string {\r\n\tconst str = '' + string;\r\n\tconst match = matchHtmlRegExp.exec(str);\r\n\r\n\tif (!match) {\r\n\t\treturn str;\r\n\t}\r\n\r\n\tlet escape;\r\n\tlet html = '';\r\n\tlet index = 0;\r\n\tlet lastIndex = 0;\r\n\r\n\tfor (index = match.index; index < str.length; index++) {\r\n\t\tswitch (str.charCodeAt(index)) {\r\n\t\t\tcase 34: // \"\r\n\t\t\t\tescape = '&quot;';\r\n\t\t\t\tbreak;\r\n\t\t\tcase 38: // &\r\n\t\t\t\tescape = '&amp;';\r\n\t\t\t\tbreak;\r\n\t\t\tcase 39: // '\r\n\t\t\t\tescape = '&#39;';\r\n\t\t\t\tbreak;\r\n\t\t\tcase 60: // <\r\n\t\t\t\tescape = '&lt;';\r\n\t\t\t\tbreak;\r\n\t\t\tcase 62: // >\r\n\t\t\t\tescape = '&gt;';\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tcontinue;\r\n\t\t}\r\n\r\n\t\tif (lastIndex !== index) {\r\n\t\t\thtml += str.substring(lastIndex, index);\r\n\t\t}\r\n\r\n\t\tlastIndex = index + 1;\r\n\t\thtml += escape;\r\n\t}\r\n\r\n\treturn lastIndex !== index\r\n\t\t? html + str.substring(lastIndex, index)\r\n\t\t: html;\r\n}\r\n", "import escapeHtml from './helpers/escape-html';\r\nimport { parseDocument, ElementType } from 'htmlparser2';\r\n\r\n\r\ndeclare global {\r\n\tnamespace JSX {\r\n\t\t\r\n\t\tinterface Element {\r\n\t\t\ttype: any;\r\n\t\t\tattributes: Record<string, unknown>;\r\n\t\t\tchildren: (Element | string)[];\r\n\t\t}\r\n\r\n\t\tinterface IntrinsicElements {\r\n\t\t\t[tagName: string]: any; // Allow any tag name with any props\r\n\t\t}\r\n\r\n\t\tinterface IntrinsicAttributes {\r\n\t\t\t[attr: string]: any; // Allow any attribute\r\n\t\t}\r\n\t}\r\n}\r\n\r\n\r\nconst voidElements: Set<string> = new Set(['area', 'base', 'br', 'col', 'embed', 'hr', 'img', 'input', 'link', 'meta', 'source', 'track', 'wbr']);\r\n\r\n\r\nfunction jsx(type: unknown, attributes: Record<string, unknown> | null, ...children: JSX.Element[]): JSX.Element | JSX.Element[]\r\n{\r\n\tif (typeof type === 'function')\r\n\t{\r\n\t\tif (type === Fragment)\r\n\t\t\treturn children;\r\n\r\n\t\treturn type({ ...attributes, children });\r\n\t}\r\n\r\n\treturn {\r\n\t\ttype: type as string,\r\n\t\tattributes: attributes || {},\r\n\t\tchildren\r\n\t};\r\n}\r\n\r\nfunction Fragment(_type: unknown, _attributes: Record<string, unknown> | null, ...children: JSX.Element[]): JSX.Element['children']\r\n{\r\n\treturn children;\r\n}\r\n\r\nfunction render(element: unknown, indent: string = ''): string\r\n{\r\n\t// Handle text\r\n\tif (typeof element === 'string')\r\n\t\treturn indent + escapeHtml(element);\r\n\r\n\t// Handle Fragment\r\n\tif (Array.isArray(element))\r\n\t\treturn element.map(item => render(item, indent)).join('\\n');\r\n\t\r\n\t// Handle Element\r\n\tif (typeof element === 'object' && element !== null)\r\n\t\treturn renderElement(element as JSX.Element);\r\n\r\n\treturn String(element);\r\n}\r\n\r\nfunction fromHtml(html: string): JSX.Element['children']\r\n{\r\n\tconst dom = parseDocument(html);\r\n\tconst result: JSX.Element['children'] = dom.children\r\n\t\t.map(child => toJsxElement(child))\r\n\t\t.filter(element => element != null);\r\n\t\r\n\treturn result;\r\n}\r\n\r\nfunction toJsxElement(node: ReturnType<typeof parseDocument>['children'][number]): JSX.Element | string | null\r\n{\r\n\tswitch (node.type)\r\n\t{\r\n\t\tcase ElementType.Text:\r\n\t\t\treturn node.data;\r\n\t\t\r\n\t\tcase ElementType.Tag:\r\n\t\tcase ElementType.Script:\r\n\t\tcase ElementType.Style:\r\n\t\t\treturn {\r\n\t\t\t\ttype: node.name,\r\n\t\t\t\tattributes: node.attribs,\r\n\t\t\t\tchildren: node.children.map(toJsxElement).filter(child => child != null)\r\n\t\t\t};\r\n\t\t\r\n\t\tcase ElementType.Root:\r\n\t\tcase ElementType.Directive:\r\n\t\tcase ElementType.CDATA:\r\n\t\t\tbreak;\r\n\t}\r\n\r\n\treturn null;\r\n}\r\n\r\nfunction renderElement(element: JSX.Element): string\r\n{\r\n\tconst { type: tag } = element;\r\n\r\n\tlet attributes: string = '';\r\n\tlet innerHtml: string | null = null;\r\n\r\n\tfor (const [key, value] of Object.entries(element.attributes))\r\n\t{\r\n\t\tif (value === undefined)\r\n\t\t\tcontinue;\r\n\t\t\r\n\t\tswitch (key)\r\n\t\t{\r\n\t\t\tcase 'DANGEROUSLY_SET_OUTER_HTML':\r\n\t\t\t\treturn String(value);\r\n\t\t\t\r\n\t\t\tcase 'DANGEROUSLY_SET_INNER_HTML':\r\n\t\t\t\tinnerHtml = String(value);\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tdefault:\r\n\t\t\t\tattributes += ` ${key}=\"${escapeHtml(String(value))}\"`;\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\r\n\tconst content: string = innerHtml ? innerHtml : element.children.map(item => render(item)).join('');\r\n\r\n\tif (voidElements.has(tag) && content.length === 0)\r\n\t\treturn `<${tag}${attributes} />`;\r\n\t\r\n\t// if (content.length === 0)\r\n\t// \treturn `<${tag}${attributes}></${tag}>`;\r\n\r\n\treturn `<${tag}${attributes}>${content}</${tag}>`;\r\n}\r\n\r\n\r\nexport {\r\n\tjsx,\r\n\tFragment,\r\n\trender,\r\n\tfromHtml,\r\n}", "import { jsx } from '@jsx';\r\n\r\n/** Inline CSS */\r\nexport function Style(props: { css: string }) {\r\n\treturn <style DANGEROUSLY_SET_INNER_HTML={props.css}></style>;\r\n}", "import { jsx } from '@jsx';\r\n\r\nexport function CookiesPopup()\r\n{\r\n\treturn (\r\n\t\t<div id='cookiesPopup'>\r\n\t\t\t<div class='g-box-pop g-foreground'>\r\n\t\t\t\t<span>\r\n\t\t\t\t\tHi there! We only use cookies that are essential for the site to function\u2014nothing extra. Thanks for visiting!\r\n\t\t\t\t</span>\r\n\r\n\t\t\t\t<div class='buttons'>\r\n\t\t\t\t\t<button hx-post='/cookies/accept'\r\n\t\t\t\t\t\thx-target='#cookiesPopup'\r\n\t\t\t\t\t\thx-swap='outerHTML'>\r\n\t\t\t\t\t\tAccept\r\n\t\t\t\t\t</button>\r\n\r\n\t\t\t\t\t<div class='spacer'></div>\r\n\r\n\t\t\t\t\t<button hx-post='/cookies/reject'>\r\n\t\t\t\t\t\tReject\r\n\t\t\t\t\t</button>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}", "import { jsx } from '@jsx';\r\nimport { CookiesPopup } from '@html/CookiesPopup';\r\nimport { User } from '../data/user';\r\n\r\nexport interface RootProps {\r\n\ttitle: string;\r\n\tchildren?: unknown;\r\n\tuser: User;\r\n}\r\n\r\nexport function Root(props: RootProps) {\r\n\treturn (\r\n\t\t<html lang='en'>\r\n\t\t\t<head>\r\n\t\t\t\t<meta charset='UTF-8'/>\r\n\t\t\t\t<meta name='viewport' content='width=device-width, initial-scale=1.0'/>\r\n\t\t\t\t\r\n\t\t\t\t<title>{props.title}</title>\r\n\r\n\t\t\t\t<link rel='icon' type='image/svg' href='images/branding/logo-x64.svg' />\r\n\r\n\t\t\t\t<link rel='stylesheet' href='global.css'/>\r\n\r\n\t\t\t\t<script src='https://unpkg.com/htmx.org@2.0.4'></script>\r\n\t\t\t\t<script src='https://unpkg.com/htmx-ext-sse@2.2.2/sse.js'></script>\r\n\t\t\t</head>\r\n\t\t\t<body hx-ext='sse' sse-connect='/sse'>\r\n\t\t\t\t<div id='root'>\r\n\t\t\t\t\t<div class='g-content-width'>\r\n\t\t\t\t\t\t{props.children}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t\r\n\t\t\t\t{props.user.acceptedCookies ? '' : (\r\n\t\t\t\t\t<CookiesPopup />\r\n\t\t\t\t)}\r\n\t\t\t</body>\r\n\t\t</html>\t\r\n\t)\r\n}", "import { jsx } from '@jsx';\r\n\r\nexport interface BasicHeaderProps {\r\n\tchildren?: unknown;\r\n}\r\n\r\nexport function MainHeader(props: BasicHeaderProps)\r\n{\r\n\tconst css = /*css*/`\r\n\t\theader.main {\r\n\t\t\tfont-size: calc(1rem * sqrt(2));\r\n\t\t\tfont-weight: 600;\r\n\t\t\ttext-align: center;\r\n\t\t\tpadding: 0.5rem;\r\n\t\t}\r\n\t`;\r\n\r\n\treturn (\r\n\t\t<header class='main g-box g-foreground g-round-header-corners'>\r\n\t\t\t<i>\r\n\t\t\t\t{props.children || 'Most Of These Folks Are Lying'}\r\n\t\t\t</i>\r\n\r\n\t\t\t<style>{css}</style>\r\n\t\t</header>\r\n\t);\r\n}", "import * as path from 'path';\r\nimport { Svg } from '@html/components/Svg';\r\nimport { jsx } from '@jsx';\r\n\r\nexport function Check(props?: object)\r\n{\r\n\treturn <Svg {...props} src={path.join(process.cwd(), '/static/images/icons/check.svg')} />\r\n}\r\n\r\nexport function Exit(props?: object)\r\n{\r\n\treturn <Svg {...props} src={path.join(process.cwd(), '/static/images/icons/exit.svg')} />\r\n}\r\n\r\nexport function OpenExternal(props?: object)\r\n{\r\n\treturn <Svg {...props} src={path.join(process.cwd(), '/static/images/icons/open-external.svg')} />\r\n}\r\n\r\nexport function Pencil(props?: object)\r\n{\r\n\treturn <Svg {...props} src={path.join(process.cwd(), '/static/images/icons/pencil.svg')} />\r\n}\r\n", "import { join } from 'path';\r\nimport { env } from './env';\r\nimport { readFileSync } from 'fs';\r\n\r\nconst cache: Map<string, string> = new Map();\r\nconst useCache: boolean = env('ENV') != 'DEV';\r\n\r\nexport function importText(...pathSegments: string[]): string {\r\n\r\n\tconst filePath = join(...pathSegments);\r\n\r\n\tlet text = cache.get(filePath);\r\n\r\n\tif (!text)\r\n\t{\r\n\t\ttext = readFileSync(filePath, 'utf8');\r\n\r\n\t\tif (useCache)\r\n\t\t\tcache.set(filePath, text);\r\n\t}\r\n\r\n\treturn text;\r\n}", "import { config } from 'dotenv';\r\n\r\nconfig();\r\n\r\n/**\r\n * Get an environment variable\r\n * @param {string} name Name of the env var\r\n * @param {string} defaultValue Value to use if the env var isn't present\r\n * @throws Throws Error if env var is not present and defaultValue is not provided\r\n */\r\nexport function env(name: string, defaultValue?: string): string\r\n{\r\n\tconst value = process.env[name];\r\n\r\n\tif (typeof value === 'string')\r\n\t\treturn value;\r\n\r\n\tif (typeof defaultValue === 'string')\r\n\t\treturn defaultValue;\r\n\r\n\tthrow new Error(`Missing required environment variable '${name}'`);\r\n}", "export function omit<T, K extends keyof T>(object: T, keys: K[]): Omit<T, K>\r\n{\r\n\tconst keySet = new Set<K>(keys);\r\n\tconst copy: Partial<T> = {};\r\n\r\n\tfor (const key in object)\r\n\t{\r\n\t\t// TS can suck a thick one here\r\n\t\t// deno-lint-ignore no-explicit-any\r\n\t\tif (keySet.has(key as any))\r\n\t\t\tcontinue;\r\n\r\n\t\tcopy[key] = object[key];\r\n\t}\r\n\r\n\treturn copy as Omit<T, K>;\r\n}", "import { jsx, Fragment, fromHtml } from '@jsx';\r\nimport { omit } from '../../helpers/omit';\r\n\r\n\r\n\r\ninterface FromHtmlProps {\r\n\thtml: string;\r\n\tchildren?: JSX.Element['children'];\r\n\t[K: string]: unknown;\r\n}\r\n\r\n/** Create JSX elements from raw HTML */\r\nexport function FromHtml(props: FromHtmlProps)\r\n{\r\n\tconst elements = fromHtml(props.html);\r\n\tconst first = elements[0];\r\n\r\n\tif (elements.length === 0 || typeof first === 'string')\r\n\t\treturn <>{elements}</>;\r\n\r\n\tif (props.children)\r\n\t\tfirst.children.push(...props.children);\r\n\r\n\tObject.assign(first.attributes, omit(props, ['html']));\r\n\r\n\treturn <>{elements}</>;\r\n}", "import { importText } from '../../helpers/import-text';\r\nimport { omit } from '../../helpers/omit';\r\nimport { FromHtml } from '@html/components/FromHtml';\r\nimport { jsx } from '@jsx';\r\n\r\n\r\ninterface SvgProps {\r\n\tsrc: string;\r\n\t[K: string]: unknown;\r\n}\r\n\r\n\r\n/** Inline SVG */\r\nexport function Svg(props: SvgProps)\r\n{\r\n\tconst svg = importText(props.src);\r\n\tconst attributes = omit(props, ['src']);\r\n\treturn <FromHtml {...attributes} html={svg} />\r\n}\r\n", "import { jsx } from '@jsx';\r\nimport { Pencil } from '@html/icons';\r\n\r\nexport function NickSection(props: { nick: string })\r\n{\r\n\treturn (\r\n\t\t<div id='nick' hx-get='/nick-change' hx-swap='outerHTML'>\r\n\t\t\tPlaying as\r\n\t\t\t<span>\r\n\t\t\t\t{props.nick}\r\n\t\t\t</span>\r\n\t\t\t<Pencil />\r\n\t\t</div>\r\n\t);\r\n}", "import { jsx } from '@jsx';\r\n\r\ninterface LoadingSpinnerProps {\r\n\t[key: string]: unknown;\r\n}\r\n\r\nexport function LoadingSpinner(props: LoadingSpinnerProps)\r\n{\r\n\tconst element = (\r\n\t\t<div {...props}>\r\n\t\t\t<div class='spinner'></div>\r\n\t\t</div>\r\n\t);\r\n\r\n\tif (!element.attributes.class)\r\n\t\telement.attributes.class = '';\r\n\t\r\n\telement.attributes.class += ' g-loading-spinner g-indicator';\r\n\r\n\treturn element;\r\n}", "main {\r\n\talign-items: center;\r\n\tjustify-content: center;\r\n}\r\n\r\n\r\n.content {\r\n\tdisplay: flex;\r\n\talign-items: center;\r\n\tjustify-content: center;\r\n\tflex-direction: column;\r\n\tgap: 1rem;\r\n}\r\n\r\n\r\nbutton.create {\r\n\tdisplay: block;\r\n\twidth: 100%;\r\n}\r\n\r\n\r\nform.join {\r\n\tposition: relative;\r\n\tdisplay: flex;\r\n\tgap: 1rem;\r\n\twidth: 100%;\r\n}\r\n\r\nform.join input[type=text] {\r\n\tflex: 1;\r\n\twidth: 0; /* Without this it grows too much for some reason */\r\n}\r\n\r\nform.join button {\r\n\twidth: 3rem;\r\n}\r\n\r\n\r\n\r\ndiv#nick,\r\nform#nick {\r\n\theight: 5rem;\r\n}\r\n\r\ndiv#nick {\r\n\tdisplay: flex;\r\n\tmargin-top: 2rem;\r\n\talign-items: center;\r\n\tgap: 0.25rem;\r\n\twidth: 100%;\r\n\tjustify-content: center;\r\n}\r\n\r\ndiv#nick span {\r\n\tcolor: var(--color-accent);\r\n\tfont-weight: 700;\r\n}\r\n\r\ndiv#nick > svg {\r\n\tmargin-left: 0.25rem;\r\n\twidth: 1.25rem;\r\n}\r\n\r\nform#nick {\r\n\tmargin-top: 2rem;\r\n\tdisplay: grid;\r\n\tgrid-template-areas: 'i i' 'c o';\r\n\tgrid-template-rows: 1fr 1fr;\r\n\tgrid-template-columns: 1fr 1fr;\r\n\tgap: 0.5rem;\r\n}\r\n\r\nform#nick input {\r\n\tgrid-area: i;\r\n}\r\n\r\nform#nick .cancel {\r\n\tgrid-area: c;\r\n}\r\n\r\nform#nick .ok {\r\n\tgrid-area: o;\r\n}\r\n\r\n\r\nfooter {\r\n\ttext-align: center;\r\n\tpadding: 1rem;\r\n}", "import { Style } from '@html/components/Style';\r\nimport { Root } from '@html/Root';\r\nimport { MainHeader } from '@html/MainHeader';\r\nimport { jsx } from '@jsx';\r\nimport { NickSection } from '@html/pages/home/NickSection';\r\nimport { LoadingSpinner } from '@html/components/LoadingSpinner';\r\nimport { User } from '../../../data/user';\r\nimport css from './style.css';\r\n\r\ninterface HomeProps {\r\n\tuser: User;\r\n}\r\n\r\nexport function Home(props: HomeProps)\r\n{\r\n\treturn (\r\n\t\t<Root title='Mo\u00FEFAL - Most of these Folks Are Lying'\r\n\t\t\tuser={props.user}>\r\n\r\n\t\t\t<MainHeader>Mo\u00FEFAL</MainHeader>\r\n\r\n\t\t\t<main>\r\n\t\t\t\t<div class='content g-box'>\r\n\t\t\t\t\t<button class='g-big create'\r\n\t\t\t\t\t\thx-get='/make'\r\n\t\t\t\t\t\thx-target='#root'\r\n\t\t\t\t\t\thx-swap='outerHTML'\r\n\t\t\t\t\t\thx-push-url='true'>\r\n\t\t\t\t\t\tMake new room\r\n\t\t\t\t\t</button>\r\n\r\n\t\t\t\t\t<form class='join'\r\n\t\t\t\t\t\thx-post='/join'\r\n\t\t\t\t\t\thx-target='#root'\r\n\t\t\t\t\t\thx-swap='outerHTML'\r\n\t\t\t\t\t\thx-trigger='submit'\r\n\t\t\t\t\t\thx-indicator='#join-indicator'>\r\n\r\n\t\t\t\t\t\t<input class='g-big'\r\n\t\t\t\t\t\t\ttype='text'\r\n\t\t\t\t\t\t\tid='code'\r\n\t\t\t\t\t\t\tname='code'\r\n\t\t\t\t\t\t\tplaceholder='Go to room'\r\n\t\t\t\t\t\t\trequired />\r\n\r\n\t\t\t\t\t\t<button class='g-big' type='submit'>\u2386</button>\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t<LoadingSpinner id='join-indicator' style='border-radius: var(--radius-common)' />\r\n\t\t\t\t\t</form>\r\n\t\t\t\t\t\r\n\t\t\t\t\t{<NickSection nick={props.user.nick} />}\r\n\t\t\t\t\t\t\r\n\t\t\t\t</div>\r\n\t\t\t</main>\r\n\r\n\t\t\t<footer hx-get='/rules'\r\n\t\t\t\thx-target='#root'\r\n\t\t\t\thx-swap='outerHTML'\r\n\t\t\t\thx-push-url='true'>\r\n\t\t\t\tHow to play\r\n\t\t\t</footer>\r\n\r\n\t\t\t<Style css={css} />\r\n\t\t</Root>\r\n\t);\r\n}", "main {\r\n\ttext-align: center;\r\n\tjustify-content: center;\r\n\tgap: 2rem;\r\n\tpadding: 1rem;\r\n}\r\n\r\nbutton {\r\n\tmargin: 1rem;\r\n}\r\n\r\nfooter {\r\n\ttext-align: center;\r\n\tmargin: 1rem;\r\n}", "import { Root } from '@html/Root';\r\nimport { MainHeader } from '@html/MainHeader';\r\nimport { Style } from '@html/components/Style';\r\nimport { jsx } from '@jsx';\r\nimport { User } from '../../../data/user';\r\nimport css from './style.css';\r\n\r\nexport function Rules({ user }: { user: User })\r\n{\r\n\treturn (\r\n\t\t<Root title='Mo\u00FEFAL - How to play' user={user}>\r\n\t\t\t<MainHeader>\r\n\t\t\t\tHow to play\r\n\t\t\t</MainHeader>\r\n\r\n\t\t\t<main>\r\n\t\t\t\t<div>One player is the guesser, the rest are liars.</div>\r\n\t\t\t\t<div>Each liar selects an article.</div>\r\n\t\t\t\t<div>One article is picked at random, and only its title is shown.</div>\r\n\t\t\t\t<div>The liars come up with their own description of what the article is about.</div>\r\n\t\t\t\t<div>The guesser tries to figure out which liar chose the article.</div>\r\n\t\t\t</main>\r\n\r\n\t\t\t<footer hx-get='/'\r\n\t\t\t\thx-target='#root'\r\n\t\t\t\thx-swap='outerHTML'\r\n\t\t\t\thx-push-url='true'>\r\n\t\t\t\tOk\r\n\t\t\t</footer>\r\n\r\n\t\t\t<Style css={css} />\r\n\t\t</Root>\r\n\t);\r\n}", "import { Article } from '../../data/article';\r\nimport { ItemSuggestion, Domain, Rules } from '../articles-helper';\r\nimport * as changeCase from 'change-case';\r\nimport Axios from 'axios';\r\n\r\n\r\ninterface ApiResponsePokemonSecies {\r\n\tcount: number;\r\n\tnext: string | null;\r\n\tprevious: string | null;\r\n\tresults: {\r\n\t\tname: string;\r\n\t\turl: string;\r\n\t}[];\r\n}\r\n\r\ninterface ApiResponsePokemon {\r\n\tabilities: {\r\n\t\tability: {\r\n\t\t\tname: string,\r\n\t\t\turl: string\r\n\t\t},\r\n\t\tis_hidden: false,\r\n\t\tslot: number\r\n\t}[],\r\n\tbase_experience: number,\r\n\tcries: {\r\n\t\tlatest: string,\r\n\t\tlegacy: string\r\n\t},\r\n\tforms: {\r\n\t\tname: string,\r\n\t\turl: string\r\n\t}[],\r\n\tgame_indices:{\r\n\t\tgame_index: number,\r\n\t\tversion: {\r\n\t\t\tname: string,\r\n\t\t\turl: string\r\n\t\t}\r\n\t}[],\r\n\theight: number,\r\n\theld_items: {\r\n\t\titem: {\r\n\t\t\tname: string,\r\n\t\t\turl: string\r\n\t\t},\r\n\t\tversion_details: {\r\n\t\t\trarity: number,\r\n\t\t\tversion: {\r\n\t\t\t\tname: string,\r\n\t\t\t\turl: string\r\n\t\t\t}\r\n\t\t}[]\r\n\t}[],\r\n\tid: number,\r\n\tis_default: true,\r\n\tlocation_area_encounters: string,\r\n\tmoves: {\r\n\t\tmove: {\r\n\t\t\tname: string,\r\n\t\t\turl: string\r\n\t\t},\r\n\t\tversion_group_details: {\r\n\t\t\tlevel_learned_at: number,\r\n\t\t\tmove_learn_method: {\r\n\t\t\t\tname: string,\r\n\t\t\t\turl: string\r\n\t\t\t},\r\n\t\t\tversion_group: {\r\n\t\t\t\tname: string,\r\n\t\t\t\turl: string\r\n\t\t\t}\r\n\t\t}[]\r\n\t}[],\r\n\tname: string,\r\n\torder: number,\r\n\tpast_abilities: unknown[],\r\n\tpast_types: unknown[],\r\n\tspecies: {\r\n\t\tname: string,\r\n\t\turl: string\r\n\t},\r\n\tsprites: {\r\n\t\tback_default: string,\r\n\t\tback_female: null,\r\n\t\tback_shiny: string,\r\n\t\tback_shiny_female: null,\r\n\t\tfront_default: string,\r\n\t\tfront_female: null,\r\n\t\tfront_shiny: string,\r\n\t\tfront_shiny_female: null,\r\n\t\tother: unknown,\r\n\t\tversions: unknown\r\n\t},\r\n\tstats: {\r\n\t\tbase_stat: number,\r\n\t\teffort: number,\r\n\t\tstat: {\r\n\t\t\tname: string,\r\n\t\t\turl: string\r\n\t\t}\r\n\t}[],\r\n\ttypes: {\r\n\t\tslot: number,\r\n\t\ttype: {\r\n\t\t\tname: string,\r\n\t\t\turl: string\r\n\t\t}\r\n\t}[],\r\n\tweight: number\r\n}\r\n\r\n\r\nconst pokedexBaseUrl = 'https://www.pokemon.com/us/pokedex/';\r\nconst apiBaseUrl = 'https://pokeapi.co/api/v2';\r\nconst axios = Axios.create({ baseURL: apiBaseUrl });\r\n\r\nlet totalPokemon = 0;\r\n\r\n\r\nasync function getArticle(id: string): Promise<Article>\r\n{\r\n\tconst parsedId = parsePokemonId(id); \r\n\tconst response = await axios.get<ApiResponsePokemon>('/pokemon/' + parsedId);\r\n\tconst article: Article = {\r\n\t\tdescription: changeCase.capitalCase(response.data.name) + ' is a pokemon!',\r\n\t\titalic: false,\r\n\t\tlink: pokedexBaseUrl + response.data.name,\r\n\t\ttitle: changeCase.capitalCase(response.data.name),\r\n\t\tthumbnail: response.data.sprites.front_default,\r\n\t};\r\n\r\n\treturn article;\r\n}\r\n\r\nasync function getRandomArticles(count: number, _rules: Rules): Promise<ItemSuggestion[]>\r\n{\r\n\tif (totalPokemon === 0)\r\n\t{\r\n\t\tconst response = await axios.get<ApiResponsePokemonSecies>('/pokemon-species?limit=1');\r\n\t\ttotalPokemon = response.data.count;\r\n\t}\r\n\t\r\n\tconst randomIds = Array.from({ length: count }, () => Math.floor(Math.random() * totalPokemon) + 1);\r\n\tconst promises = randomIds.map(id => axios.get<ApiResponsePokemon>('/pokemon/' + id));\r\n\tconst responses = await Promise.all(promises);\r\n\t\r\n\tconst suggestions: ItemSuggestion[] = responses.map(response => ({\r\n\t\tid: changeCase.capitalCase(response.data.name),\r\n\t\ttitle: changeCase.capitalCase(response.data.name),\r\n\t\tsearch: pokedexBaseUrl + response.data.name,\r\n\t}));\r\n\r\n\treturn suggestions;\r\n}\r\n\r\nfunction parsePokemonId(id: string): string\r\n{\r\n\t// Assume it's a pokedex url ending with \"/<pokemon-name>\"\r\n\tif (id.indexOf('/') !== -1)\r\n\t{\r\n\t\tconst pathSegments = id.split('/');\r\n\t\tconst encodedTitle = pathSegments[pathSegments.length - 1];\r\n\t\treturn changeCase.kebabCase(decodeURIComponent(encodedTitle));\r\n\t}\r\n\r\n\tconst int = parseInt(id);\r\n\r\n\tif (!isNaN(int))\r\n\t\treturn int.toString();\r\n\r\n\treturn changeCase.kebabCase(id);\r\n}\r\n\r\n\r\n\r\nexport const PokeApi: Domain = {\r\n\tname: 'Pokemon',\r\n\titemName: 'pokemon',\r\n\tsubmitInputPlaceholder: 'Pokemon name, ID, or pokedex link',\r\n\truleSet: [],\r\n\tgetArticle,\r\n\tgetRandomArticles,\r\n}", "import { Article } from '../../data/article';\r\nimport { ItemSuggestion, Domain, Rules } from '../articles-helper';\r\nimport Axios from 'axios';\r\n\r\n\r\ninterface ArticlesResponse {\r\n\tbatchcomplete: string;\r\n\tcontinue: {\r\n\t\tgrncontinue: string;\r\n\t\tcontinue: string;\r\n\t},\r\n\tquery: {\r\n\t\tpages: Record<string, {\r\n\t\t\tpageid: number;\r\n\t\t\tns: number;\r\n\t\t\ttitle: string;\r\n\t\t}>\r\n\t}\r\n}\r\n\r\n\r\nconst apiBaseUrl = 'https://wikipedia.org/';\r\nconst axios = Axios.create({ baseURL: apiBaseUrl });\r\n\r\n\r\nasync function getArticle(id: string): Promise<Article>\r\n{\r\n\tconst title = getTitleFromId(id);\r\n\r\n\tconst response = await axios.get('/w/api.php', {\r\n\t\tparams: {\r\n\t\t\taction: 'query',\r\n\t\t\ttitles: title,\r\n\t\t\tformat: 'json',\r\n\t\t\tredirects: '1',\r\n\t\t\tprop: 'pageprops|pageimages|description|extracts',\r\n\t\t\texintro: '1',\r\n\t\t\texplaintext: '1',\r\n\t\t\tpithumbsize: '500',\r\n\t\t\torigin: '*'\r\n\t\t}\r\n\t});\r\n\r\n\t// deno-lint-ignore no-explicit-any\r\n\tconst pageData: any = Object.values(response.data.query.pages)[0];\r\n\r\n\tconst article: Article = {\r\n\t\tlink: new URL('wiki/' + title, apiBaseUrl).href,\r\n\t\ttitle: response.data.query.redirects ? response.data.query.redirects[0].from : pageData.title,\r\n\t\tdescription: pageData.extract,\r\n\t\tthumbnail: pageData.thumbnail ? pageData.thumbnail.source : null,\r\n\t\titalic: (pageData.pageprops.displaytitle || '').startsWith('<i>'),\r\n\t};\r\n\r\n\treturn article;\r\n}\r\n\r\nasync function getRandomArticles(count: number, _rules: Rules): Promise<ItemSuggestion[]>\r\n{\r\n\tconst namespaces: number[] = [\r\n\t\t0 // Articles namespace\r\n\t];\r\n\r\n\tconst response = await axios.get<ArticlesResponse>('/w/api.php', {\r\n\t\tparams: {\r\n\t\t\taction: 'query',\r\n\t\t\tgenerator: 'random',\r\n\t\t\tgrnnamespace: namespaces.join('|'),\r\n\t\t\tgrnlimit: count.toString(),\r\n\t\t\tformat: 'json',\r\n\t\t\torigin: '*' // Handle CORS\r\n\t\t}\r\n\t});\r\n\r\n\tconst suggestions: ItemSuggestion[] = Object.values(response.data.query.pages).map(item => ({\r\n\t\tid: item.title,\r\n\t\tsearch: new URL('wiki/' + item.title, apiBaseUrl).href,\r\n\t\ttitle: item.title,\r\n\t}));\r\n\r\n\treturn suggestions;\r\n}\r\n\r\n\r\nfunction getTitleFromId(id: string): string\r\n{\r\n\t// Not a link, assume it's the title itself\r\n\tif (id.indexOf('/') === -1)\r\n\t\treturn id;\r\n\t\r\n\tconst protocolTest = /^(http|https):\\/\\//;\r\n\tconst url = new URL(protocolTest.test(id) ? id : 'https://' + id);\r\n\r\n\tif (url.searchParams.has('title'))\r\n\t\treturn url.searchParams.get('title')!;\r\n\r\n\tconst pathSegments = url.pathname.split('/');\r\n\tconst encodedTitle = pathSegments[pathSegments.length - 1];\r\n\r\n\treturn decodeURIComponent(encodedTitle);\r\n}\r\n\r\n\r\nexport const WikipediaOrg: Domain = {\r\n\tname: 'Wikipedia',\r\n\titemName: 'Article',\r\n\tsubmitInputPlaceholder: 'Article name or Wikipedia link',\r\n\truleSet: [{\r\n\t\tid: 'anyNamespace',\r\n\t\tname: 'Any Namespace',\r\n\t\tdescription: 'Allow picking articles in any namespace',\r\n\t\tdefaultValue: true,\r\n\t}, {\r\n\t\tid: 'preserveTitleStyle',\r\n\t\tname: 'Preserve Title Style',\r\n\t\tdescription: 'Preserve the title style of articles (italics)',\r\n\t\tdefaultValue: true,\r\n\t}],\r\n\tgetArticle,\r\n\tgetRandomArticles,\r\n}", "import { Article } from '../../data/article';\r\nimport { ItemSuggestion, Domain, Rules } from '../articles-helper';\r\nimport Axios from 'axios';\r\n\r\n\r\ninterface ArticlesResponse {\r\n\tbatchcomplete: string;\r\n\tcontinue?: {\r\n\t\tgrncontinue: string;\r\n\t\tcontinue: string;\r\n\t},\r\n\tquery: {\r\n\t\tpages: Record<string, {\r\n\t\t\tpageid: number;\r\n\t\t\tns: number;\r\n\t\t\ttitle: string;\r\n\t\t}>\r\n\t}\r\n}\r\n\r\n\r\nconst apiBaseUrl = 'https://wiktionary.org/';\r\nconst axios = Axios.create({ baseURL: apiBaseUrl });\r\n\r\n\r\nasync function getArticle(id: string): Promise<Article>\r\n{\r\n\tconst title = getTitleFromId(id);\r\n\r\n\tconst response = await axios.get('/w/api.php', {\r\n\t\tparams: {\r\n\t\t\taction: 'query',\r\n\t\t\ttitles: title,\r\n\t\t\tformat: 'json',\r\n\t\t\tredirects: '1',\r\n\t\t\tprop: 'extracts|description',\r\n\t\t\texintro: '1',\r\n\t\t\texplaintext: '1',\r\n\t\t\torigin: '*'\r\n\t\t}\r\n\t});\r\n\r\n\t// deno-lint-ignore no-explicit-any\r\n\tconst pageData: any = Object.values(response.data.query.pages)[0];\r\n\tconst articleData: Article = {\r\n\t\tlink: new URL('wiki/' + title, apiBaseUrl).href,\r\n\t\ttitle: response.data.query.redirects ? response.data.query.redirects[0].from : pageData.title,\r\n\t\tdescription: pageData.extract,\r\n\t\tthumbnail: '',\r\n\t\titalic: false\r\n\t};\r\n\r\n\treturn articleData;\r\n}\r\n\r\nasync function getRandomArticles(amount: number, _rules: Rules): Promise<ItemSuggestion[]>\r\n{\r\n\tconst namespaces: number[] = [\r\n\t\t0 // Articles namespace\r\n\t];\r\n\r\n\tconst response = await axios.get<ArticlesResponse>('/w/api.php', {\r\n\t\tparams: {\r\n\t\t\taction: 'query',\r\n\t\t\tgenerator: 'random',\r\n\t\t\tgrnnamespace: namespaces.join('|'),\r\n\t\t\tgrnlimit: amount.toString(),\r\n\t\t\tformat: 'json',\r\n\t\t\torigin: '*' // Handle CORS\r\n\t\t}\r\n\t});\r\n\r\n\tconst suggestions: ItemSuggestion[] = Object.values(response.data.query.pages).map(item => ({\r\n\t\tid: item.title,\r\n\t\tsearch: new URL('wiki/' + item.title, apiBaseUrl).href,\r\n\t\ttitle: item.title,\r\n\t}));\r\n\r\n\treturn suggestions;\r\n}\r\n\r\n\r\nfunction getTitleFromId(id: string): string\r\n{\r\n\t// Not a link, assume it's the title itself\r\n\tif (id.indexOf('/') === -1)\r\n\t\treturn id;\r\n\t\r\n\tconst protocolTest = /^(http|https):\\/\\//;\r\n\tconst url = new URL(protocolTest.test(id) ? id : 'https://' + id);\r\n\r\n\tif (url.searchParams.has('title'))\r\n\t\treturn url.searchParams.get('title')!;\r\n\r\n\tconst pathSegments = url.pathname.split('/');\r\n\tconst encodedTitle = pathSegments[pathSegments.length - 1];\r\n\r\n\treturn decodeURIComponent(encodedTitle);\r\n}\r\n\r\n\r\n\r\nexport const WiktionaryOrg: Domain = {\r\n\tname: 'Wiktionary',\r\n\titemName: 'word',\r\n\tsubmitInputPlaceholder: 'Word or Wiktionary link',\r\n\truleSet: [{\r\n\t\tid: 'anyNamespace',\r\n\t\tname: 'Any Namespace',\r\n\t\tdescription: 'Allow picking articles in any namespace',\r\n\t\tdefaultValue: true,\r\n\t}],\r\n\tgetArticle,\r\n\tgetRandomArticles,\r\n};", "import { Article } from '../data/article';\r\nimport { PokeApi } from './domains/pokeapi.co';\r\nimport { WikipediaOrg } from './domains/wikipedia.org';\r\nimport { WiktionaryOrg } from './domains/wiktionary.org';\r\n\r\n\r\nexport interface Rule {\r\n\tid: string;\r\n\tname: string;\r\n\tdescription: string;\r\n\tdefaultValue: boolean;\r\n}\r\n\r\nexport interface Rules {\r\n\t[id: Rule['id']]: boolean;\r\n};\r\n\r\nexport interface ItemSuggestion {\r\n\tid: string;\r\n\ttitle: string;\r\n\tsearch: string;\r\n}\r\n\r\nexport interface Domain {\r\n\tname: string;\r\n\titemName: string;\r\n\tsubmitInputPlaceholder: string;\r\n\truleSet: Rule[];\r\n\tgetArticle(link: string): Promise<Article>;\r\n\tgetRandomArticles(count: number, rules: Rules): Promise<ItemSuggestion[]>;\r\n}\r\n\r\n\r\nconst domains: Map<string, Domain> = new Map();\r\n\r\n\r\n\r\n// Register domains here\r\ndomains.set(WikipediaOrg.name, WikipediaOrg);\r\ndomains.set(WiktionaryOrg.name, WiktionaryOrg);\r\ndomains.set(PokeApi.name, PokeApi);\r\n\r\n\r\n\r\nfunction getArticle(domainName: string, link: string): Promise<Article>\r\n{\r\n\treturn domains.get(domainName)!.getArticle(link);\r\n}\r\n\r\nfunction getRandomArticles(domainName: string, count: number, rules: Rules): Promise<ItemSuggestion[]>\r\n{\r\n\treturn domains.get(domainName)!.getRandomArticles(count, rules);\r\n}\r\n\r\nfunction createRules(domainName: string, params: { [key: string]: unknown }): Rules\r\n{\r\n\tconst ruleSet = domains.get(domainName)!.ruleSet;\r\n\tconst rules: Rules = {};\r\n\r\n\tfor (const rule of ruleSet)\r\n\t{\r\n\t\tconst param = params[domainName + '-' + rule.id];\r\n\t\trules[rule.id] = param === 'on';\r\n\t}\r\n\r\n\treturn rules;\r\n}\r\n\r\nfunction getRule(domainName: string, id: Rule['id']): Rule\r\n{\r\n\tconst ruleSet = domains.get(domainName)!.ruleSet;\r\n\r\n\tfor (const rule of ruleSet)\r\n\t{\r\n\t\tif (rule.id == id)\r\n\t\t\treturn rule;\r\n\t}\r\n\r\n\tthrow new Error(`Domain '${domainName}' has no rule with id '${id}'`);\r\n}\r\n\r\nfunction getRules(domainName: string): Rule[]\r\n{\r\n\treturn domains.get(domainName)!.ruleSet;\r\n}\r\n\r\n\r\nfunction getDomain(domainName: string): Domain | undefined\r\n{\r\n\treturn domains.get(domainName);\r\n}\r\n\r\nfunction getDomains(): Domain[]\r\n{\r\n\treturn Array.from(domains.values());\r\n}\r\n\r\n/** Expects exact domain match, not a link */\r\nfunction isDomainRegistered(domain: unknown): boolean\r\n{\r\n\treturn domains.has(domain as string);\r\n}\r\n\r\n\r\n\r\nexport const ArticlesHelper = {\r\n\tgetArticle,\r\n\tgetRandomArticles,\r\n\tcreateRules,\r\n\tgetRule,\r\n\tgetRules, // TODO: Get rid\r\n\tgetDomain,\r\n\tgetDomains,\r\n\tisDomainRegistered,\r\n}", "main {\r\n\tjustify-content: center;\r\n}\r\n\r\n\r\nsection > .header {\r\n\ttext-align: center;\r\n\tmargin-bottom: 0.5rem;\r\n}\r\n\r\nsection > .items {\r\n\tdisplay: flex;\r\n\tflex-direction: column;\r\n\tgap: 0.5rem;\r\n}\r\n\r\n\r\nlabel.option {\r\n\tdisplay: flex;\r\n\talign-items: center;\r\n\tgap: 0.5rem;\r\n\tpadding: 0.25rem 0.5rem;\r\n\twidth: 100%;\r\n\theight: 2rem;\r\n\tbackground-color: var(--color-background);\r\n\tborder-radius: var(--radius-common);\r\n}\r\n\r\n\r\nsection.rules {\r\n\tdisplay: flex;\r\n\tflex: 1;\r\n\tflex-direction: column;\r\n}\r\n\r\nsection.rules > .items {\r\n\tflex: 1;\r\n\tflex-direction: column;\r\n}\r\n\r\nsection.rules > .items > .checkboxes {\r\n\tdisplay: flex;\r\n\tflex-direction: column;\r\n\tgap: 0.5rem;\r\n\tflex: 1;\r\n\toverflow-y: scroll;\r\n}\r\n\r\nsection.rules .limit-container {\r\n\tdisplay: flex;\r\n\talign-items: center;\r\n\tgap: inherit;\r\n\theight: 2.25rem;\r\n}\r\n\r\nsection.rules .limit-container label {\r\n\tflex: 1;\r\n\twidth: initial;\r\n}\r\n\r\nsection.rules .limit-container input[type='number'] {\r\n\twidth: 4.5rem;\r\n}\r\n\r\nsection.rules .limit-container > * {\r\n\theight: 100%;\r\n}\r\n\r\n/*\r\ninput[type='checkbox'] {\r\n\tmargin-right: 0.5rem;\r\n} */\r\n\r\n\r\nbutton.make {\r\n\tmargin: 1rem;\r\n}\r\n\r\n\r\nfooter {\r\n\ttext-align: center;\r\n\tmargin: 1rem;\r\n}\r\n", "import { Root } from '@html/Root';\r\nimport { MainHeader } from '@html/MainHeader';\r\nimport { Style } from '@html/components/Style';\r\nimport { jsx } from '@jsx';\r\nimport { Room } from '../../../data/room';\r\nimport { ArticlesHelper } from '../../../articles/articles-helper';\r\nimport { LoadingSpinner } from '@html/components/LoadingSpinner';\r\nimport { User } from '../../../data/user';\r\nimport css from './style.css';\r\n\r\n\r\ninterface MakeRoomProps {\r\n\tcurrentRoom?: Room | null;\r\n\tuser: User;\r\n}\r\n\r\n\r\nconst limitUsers = false;\r\n\r\n\r\nexport function MakeRoom(props: MakeRoomProps)\r\n{\r\n\treturn (\r\n\t\t<Root title='Mo\u00FEFAL - Make Room' user={props.user}>\r\n\t\t\t<MainHeader>Make Room</MainHeader>\r\n\r\n\t\t\t<main>\r\n\t\t\t\t<DomainsSection />\r\n\t\t\t\t<RulesSection />\r\n\t\t\t\r\n\t\t\t\t{props.currentRoom ? (\r\n\t\t\t\t\t<div class='g-box-pop g-foreground'>\r\n\t\t\t\t\t\t<label class='option'>\r\n\t\t\t\t\t\t\t<input type='checkbox' name='invite' checked />\r\n\t\t\t\t\t\t\tInvite previous room\r\n\t\t\t\t\t\t</label>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t) : ''}\r\n\r\n\t\t\t\t<button class='make g-big'\r\n\t\t\t\t\thx-post='/make'\r\n\t\t\t\t\thx-target='#root'\r\n\t\t\t\t\thx-swap='outerHTML'\r\n\t\t\t\t\thx-include='input'\r\n\t\t\t\t\thx-push-url='true'\r\n\t\t\t\t\thx-indicator='#make-indicator'>\r\n\t\t\t\t\tMake\r\n\t\t\t\t</button>\r\n\r\n\t\t\t\t<LoadingSpinner id='make-indicator' />\r\n\t\t\t</main>\r\n\r\n\t\t\t<footer>\r\n\t\t\t\t<div hx-get='/'\r\n\t\t\t\t\thx-target='#root'\r\n\t\t\t\t\thx-swap='outerHTML'\r\n\t\t\t\t\thx-push-url='true'>\r\n\t\t\t\t\tCancel\r\n\t\t\t\t</div>\r\n\t\t\t</footer>\r\n\r\n\t\t\t<Style css={css} />\r\n\t\t</Root>\r\n\t);\r\n}\r\n\r\n\r\nfunction DomainsSection()\r\n{\r\n\t// fight me bro\r\n\tconst onclick = `\r\n\t\tdocument.querySelectorAll('[data-domain]').forEach(x => x.hidden = true);\r\n\t\tdocument.querySelectorAll('[data-domain=\"%domain%\"]').forEach(x => x.hidden = false);\r\n\t`;\r\n\r\n\treturn (\r\n\t\t<section class='domains g-box-pop g-foreground'>\r\n\t\t\t<div class='header'>Domain</div>\r\n\r\n\t\t\t<div class='items'>\r\n\t\t\t\t{ArticlesHelper.getDomains().map((domain, i) => (\r\n\t\t\t\t\t<label class='option' onclick={onclick.replace('%domain%', domain.name)}>\r\n\t\t\t\t\t\t<input type='radio' name='domain' value={domain.name} checked={!i || undefined} />\r\n\t\t\t\t\t\t{domain.name}\r\n\t\t\t\t\t</label>\r\n\t\t\t\t))}\r\n\t\t\t</div>\r\n\t\t</section>\r\n\t);\r\n}\r\n\r\n\r\nfunction RulesSection()\r\n{\r\n\treturn (\r\n\t\t<section class='rules g-box-pop g-foreground'>\r\n\r\n\t\t\t<div class='header'>Rules</div>\r\n\t\t\t\r\n\t\t\t<div class='items'>\r\n\t\t\t\t<div class='checkboxes'>\r\n\t\t\t\t\t{ArticlesHelper.getDomains().map((domain, i) => \r\n\t\t\t\t\t\tdomain.ruleSet.map(rule => (\r\n\t\t\t\t\t\t\t<div data-domain={domain.name} hidden={!!i || undefined}>\r\n\t\t\t\t\t\t\t\t<label class='option'>\r\n\t\t\t\t\t\t\t\t\t<input type='checkbox' name={domain.name + '-' + rule.id} checked={rule.defaultValue} />\r\n\t\t\t\t\t\t\t\t\t{rule.name}\r\n\t\t\t\t\t\t\t\t</label>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t))\r\n\t\t\t\t\t)}\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<div class='g-hr'></div>\r\n\r\n\t\t\t\t<div class='limit-container'>\r\n\t\t\t\t\t<label class='option'>\r\n\t\t\t\t\t\t<input type='checkbox'\r\n\t\t\t\t\t\t\tname='limit-users'\r\n\t\t\t\t\t\t\tonclick='limitInput.hidden = !this.checked'\r\n\t\t\t\t\t\t\tchecked={limitUsers || undefined} />\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tParticipants limit\r\n\t\t\t\t\t</label>\r\n\r\n\t\t\t\t\t<input id='limitInput'\r\n\t\t\t\t\t\ttype='number'\r\n\t\t\t\t\t\tname='users-limit'\r\n\t\t\t\t\t\tvalue={4}\r\n\t\t\t\t\t\tmin={3}\r\n\t\t\t\t\t\tmax={40}\r\n\t\t\t\t\t\tstep={1}\r\n\t\t\t\t\t\thidden={!limitUsers} />\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</section>\r\n\t);\r\n}", "export function objectLength(obj: object): number {\r\n\treturn Object.keys(obj).length;\r\n}", "import { Room } from '../../../../data/room';\r\nimport { objectLength } from '../../../../helpers/object-length';\r\nimport { jsx } from '@jsx';\r\n\r\n\r\nconst id = 'users-count';\r\n\r\n\r\ninterface UsersCountProps {\r\n\troom: Room;\r\n\tswappingExistent?: boolean;\r\n}\r\n\r\n\r\nexport function UsersCount(props: UsersCountProps)\r\n{\r\n\tif (props.swappingExistent == undefined)\r\n\t\tprops.swappingExistent = true;\r\n\r\n\tconst text = `Participants ( ${getCountString(props.room)} )`;\r\n\r\n\tif (props.swappingExistent)\r\n\t{\r\n\t\treturn (\r\n\t\t\t<span id={id} hx-swap-oob={'outerHTML:#' + id}>\r\n\t\t\t\t{text}\r\n\t\t\t</span>\r\n\t\t);\r\n\t}\r\n\r\n\treturn <span id={id}>{text}</span>;\r\n}\r\n\r\n\r\nfunction getCountString(room: Room) {\r\n\tconst usersCount = objectLength(room.users);\r\n\t\r\n\tif (room.usersLimit == 0)\r\n\t\treturn usersCount;\r\n\r\n\treturn usersCount + '/' + room.usersLimit;\r\n}\r\n", "export class Logger {\r\n\r\n\tprivate label: string;\r\n\r\n\tconstructor(label: string) {\r\n\t\tthis.label = label;\r\n\t}\r\n\r\n\tpublic log(...message: unknown[]): void {\r\n\t\tLogger.log(this.label, ...message);\r\n\t}\r\n\r\n\tpublic static log(label: string, ...message: unknown[]): void {\r\n\t\tconsole.log(`[${label}]`, ...message);\r\n\t}\r\n}", "export default function randomString(length: number, charSet = 'abcdefghijklmnopqrstuvwxyz0123456789'): string {\r\n    let result = '';\r\n    for (let i = 0; i < length; i++) {\r\n        const randomIndex = Math.floor(Math.random() * charSet.length);\r\n        result += charSet.charAt(randomIndex);\r\n    }\r\n    return result;\r\n}", "import tnacl from 'tweetnacl';\r\n\r\n\r\nfunction createSecretToken<T>(data: T, secret: Buffer): string {\r\n\tconst nonce = tnacl.randomBytes(tnacl.secretbox.nonceLength);\r\n\tconst payload = Buffer.from(JSON.stringify(data));\r\n\tconst box = tnacl.secretbox(payload, nonce, secret);\r\n\tconst token = Buffer.concat([ nonce, box ]);\r\n\treturn token.toString('base64');\r\n}\r\n\r\nfunction readSecretToken<T>(token: string, secret: Buffer): T {\r\n\tconst buf = Buffer.from(token, 'base64');\r\n\tconst nonce = buf.slice(0, tnacl.secretbox.nonceLength);\r\n\tconst box = buf.slice(tnacl.secretbox.nonceLength);\r\n\tconst payload = Buffer.from(tnacl.secretbox.open(box, nonce, secret)!);\r\n\tconst obj = JSON.parse(payload.toString());\r\n\treturn obj;\r\n}\r\n\r\nfunction generateId(byteLength: number = 128): string\r\n{\r\n\tconst bytes = crypto.getRandomValues(new Uint8Array(byteLength));\r\n\tconst base64 = btoa(String.fromCharCode(...bytes));\r\n\tconst urlSafeToken = base64.replace(/\\+/g, '-').replace(/\\//g, '_').replace(/=+$/, '');\r\n\treturn urlSafeToken;\r\n}\r\n\r\n\r\nexport const TokenHelper = {\r\n\tcreateSecretToken,\r\n\treadSecretToken,\r\n\tgenerateId,\r\n}", "import { TokenHelper } from '../helpers/token-helper';\r\nimport { adjectives, animals, uniqueNamesGenerator } from 'unique-names-generator';\r\nimport { randomUUID } from 'crypto';\r\nimport { User } from '../data/user';\r\nimport { env } from '../helpers/env';\r\nimport { Request, Response, NextFunction } from 'express';\r\n\r\n\r\nexport class Session {\r\n\r\n\tpublic readonly id: string;\r\n\tpublic readonly user: User; // Not so much readonly as we want it to be public get but private set\r\n\r\n\tconstructor (id: string) {\r\n\t\tthis.id = id;\r\n\t\tthis.user = {\r\n\t\t\tid: randomUUID(),\r\n\t\t\tnick: generateNick(),\r\n\t\t\tacceptedCookies: false,\r\n\t\t};\r\n\t}\r\n\r\n\tpublic save(res: Response, data?: Partial<User>) {\r\n\r\n\t\tif (data)\r\n\t\t\tObject.assign(this.user, data);\r\n\t\r\n\t\tconst token = TokenHelper.createSecretToken(this, secret);\r\n\r\n\t\tres.cookie(cookieName, token);\r\n\t}\r\n}\r\n\r\n\r\nconst secret: Buffer = Buffer.from(env('SESSIONS_SECRET'));\r\nconst cookieName = 'session';\r\n\r\n\r\nasync function middleware(req: Request, res: Response, next: NextFunction)\r\n{\r\n\tif (cookieName in req.cookies) {\r\n\t\treq.session = TokenHelper.readSecretToken(req.cookies[cookieName], secret);\r\n\t\treq.session.save = Session.prototype.save; // Ew :/\r\n\t} else {\r\n\t\tconst session = new Session(TokenHelper.generateId());\r\n\t\tsession.save(res);\r\n\t\treq.session = session;\r\n\t}\r\n\r\n\tawait next();\r\n}\r\n\r\n\r\nfunction generateNick(): string {\r\n\treturn uniqueNamesGenerator({\r\n\t\tdictionaries: [adjectives, animals],\r\n\t\tseparator: ' ',\r\n\t\tstyle: 'capital'\r\n\t});\r\n}\r\n\r\n\r\nexport const SessionParser = {\r\n\tcookieName,\r\n\tmiddleware,\r\n}", "import { User } from '../data/user';\r\nimport { SessionParser } from '../middlewares/session-parser';\r\nimport { RoomsManager } from '../managers/rooms-manager';\r\nimport { Logger } from '../helpers/logger';\r\nimport { Router, Response } from 'express';\r\n\r\n\r\nconst logger = new Logger('EventSender');\r\nconst targets: Map<User['id'], Response> = new Map();\r\nconst router = Router();\r\n\r\n\r\nrouter.use(SessionParser.middleware);\r\n\r\n\r\nrouter.get('/sse', async (req, res) => {\r\n\tconst { user } = req.session;\r\n\tconst target = res;\r\n\r\n\tres.setHeader('Content-Type', 'text/event-stream');\r\n\tres.setHeader('Cache-Control', 'no-cache');\r\n\tres.setHeader('Connection', 'keep-alive');\r\n\tres.flushHeaders();\r\n\r\n\ttargets.set(user.id, target);\r\n\r\n\treq.on('close', () => {\r\n\t\tlogger.log(user.nick, 'disconnected');\r\n\t\tRoomsManager.notifyUserDisconnected(user);\r\n\t\ttargets.delete(user.id);\r\n\t});\r\n\r\n\tlogger.log(user.nick, 'connected');\r\n\tRoomsManager.notifyUserConnected(user);\r\n});\r\n\r\n\r\n\r\nfunction send(userId: User['id'], type: string, html: string)\r\n{\r\n\tconst target = targets.get(userId);\r\n\r\n\tif (!target)\r\n\t\treturn;\r\n\r\n\ttarget.write(`event: ${type}\\n`);\r\n\ttarget.write(`data: ${html}\\n\\n`);\r\n}\r\n\r\nfunction sendHtml(userId: User['id'], html: string) {\r\n\ttargets.get(userId)?.write(html);\r\n}\r\n\r\nfunction isConnected(userId: User['id']) {\r\n\treturn targets.has(userId);\r\n}\r\n\r\n\r\nexport const EventSender = {\r\n\trouter,\r\n\tsend,\r\n\tsendHtml,\r\n\tisConnected,\r\n};", "import { Room } from '../../../../data/room';\r\nimport { User } from '../../../../data/user';\r\nimport { EventSender } from '../../../../managers/event-sender';\r\nimport { jsx } from '@jsx';\r\nimport * as Icons from '@html/icons';\r\n\r\n\r\ninterface UsersListItem {\r\n\tuser: User;\r\n\troom: Room;\r\n}\r\n\r\n\r\nconst Check = (\r\n\t<span style='color: var(--color-accent);'>\r\n\t\t<Icons.Check />\r\n\t</span>\r\n);\r\n\r\n\r\nexport function getSwapString(userId: User['id']): string {\r\n\treturn `UpdateUsersListItem-${userId}`;\r\n}\r\n\r\nexport function UsersListItem({ user, room }: UsersListItem)\r\n{\r\n\tconst check = room.articles.find(article => article.userId == user.id);\r\n\tconst classes: string[] = [];\r\n\r\n\tif (!EventSender.isConnected(user.id))\r\n\t\tclasses.push('disconnected');\r\n\r\n\tif (user.id === room.guesserId)\r\n\t\tclasses.push('guesser');\r\n\r\n\treturn (\r\n\t\t<li class={classes.join(' ')}\r\n\t\t\tsse-swap={getSwapString(user.id)}\r\n\t\t\thx-swap='outerHTML'>\r\n\t\t\t\r\n\t\t\t<div>\r\n\t\t\t\t<span class='nick'>{user.nick}</span>\r\n\r\n\t\t\t\t{check ? Check : ''}\r\n\r\n\t\t\t\t<div class='kick' hx-post={'/kick?id=' + user.id}>\r\n\t\t\t\t\tKick\r\n\t\t\t\t</div>\r\n\t\t\t\t\r\n\t\t\t\t<span class='guesser-label'>Guesser</span>\r\n\t\t\t</div>\r\n\t\t</li>\r\n\t);\r\n}\r\n", "import { jsx } from '@jsx';\r\nimport { ArticlesHelper } from '../../../../articles/articles-helper';\r\nimport { Room } from '../../../../data/room';\r\nimport { capitalCase } from 'change-case';\r\n\r\n\r\ninterface ArticlesCounterProps {\r\n\troom: Room;\r\n\tswappingExistent?: boolean;\r\n}\r\n\r\n\r\nconst id = 'items-counter';\r\n\r\n\r\nexport function ArticlesCounter(props: ArticlesCounterProps)\r\n{\r\n\tif (props.swappingExistent == undefined)\r\n\t\tprops.swappingExistent = true;\r\n\r\n\tconst count = props.room.articles.length;\r\n\tconst domain = ArticlesHelper.getDomain(props.room.domainName)!;\r\n\r\n\tconst element: JSX.Element = (\r\n\t\t<span id={id} style='font-size: 1.2rem;'>\r\n\t\t\t{count} {capitalCase(domain.itemName + (count === 1 ? '' : 's'))} submitted\r\n\t\t</span>\r\n\t);\r\n\r\n\tif (props.swappingExistent)\r\n\t\telement.attributes['hx-swap-oob'] = 'outerHTML:#' + id;\r\n\r\n\treturn element;\r\n}", "import { Article } from '../data/article';\r\nimport { jsx, Fragment } from '@jsx';\r\n\r\ninterface ArticleTitleProps {\r\n\tpreserveStyle: boolean;\r\n\tarticle: Article;\r\n}\r\n\r\nexport function ArticleTitle(props: ArticleTitleProps)\r\n{\r\n\tif (!props.preserveStyle || !props.article.italic)\r\n\t\treturn <>{props.article.title}</>;\r\n\r\n\treturn <i>{props.article.title}</i>;\r\n}", "import { Article } from '../../../../data/article';\r\nimport { Room } from '../../../../data/room';\r\nimport { ArticleTitle } from '@html/ArticleTitle';\r\nimport { jsx, Fragment } from '@jsx';\r\n\r\ninterface RoomStartedProps {\r\n\tarticle: Article;\r\n\troom: Room;\r\n}\r\n\r\nexport function RoomStarted(props: RoomStartedProps)\r\n{\r\n\tconst style = /*style*/`\r\n\t\tdisplay: flex;\r\n\t\tjustify-content: center;\r\n\t\tflex-direction: column;\r\n\t\tpadding: 1rem;\r\n\t\ttext-align: center;\r\n\t\tcolor: var(--color-accent);\r\n\t\tflex: 1;\r\n\t`;\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<section style='flex: 1; display: flex; flex-direction: column;'>\r\n\t\t\t\t<h2 style={style}>\r\n\t\t\t\t\t<ArticleTitle\r\n\t\t\t\t\t\tarticle={props.article}\r\n\t\t\t\t\t\tpreserveStyle={props.room.rules.preserveTitleStyle}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</h2>\r\n\t\t\t</section>\r\n\t\t\t\r\n\t\t\t<div class='g-box'>\r\n\t\t\t\t<button class='g-big create'\r\n\t\t\t\t\thx-get='/make'\r\n\t\t\t\t\thx-target='#root'\r\n\t\t\t\t\thx-swap='outerHTML'\r\n\t\t\t\t\thx-push-url='true'\r\n\t\t\t\t\tstyle='width: 100%;'>\r\n\t\t\t\t\tMake new room\r\n\t\t\t\t</button>\r\n\t\t\t</div>\r\n\t\t</>\r\n\t);\r\n}", "import { jsx } from '@jsx';\r\nimport { Room } from '../../../../data/room';\r\n\r\n\r\ninterface StartButtonProps {\r\n\troom: Room;\r\n\tswappingExistent?: boolean;\r\n}\r\n\r\n\r\nconst id = 'start-button';\r\n\r\n\r\nexport function StartButton(props: StartButtonProps)\r\n{\r\n\tif (props.swappingExistent === undefined)\r\n\t\tprops.swappingExistent = true;\r\n\r\n\tconst attributes: Record<string, unknown> = {\r\n\t\tid,\r\n\t\tclass: 'start g-big',\r\n\t\t'hx-post': '/start',\r\n\t\t'hx-target': '#room-view',\r\n\t};\r\n\r\n\tif (props.swappingExistent)\r\n\t\tattributes['hx-swap-oob'] = 'outerHTML:#' + id;\r\n\r\n\tif (props.room.articles.length === 0)\r\n\t\tattributes['disabled'] = true;\r\n\r\n\treturn <button {...attributes}>Start</button>;\r\n}", "@keyframes slideUp {\r\n\tfrom {\r\n\t\ttransform: translateY(100%);\r\n\t\topacity: 0;\r\n\t}\r\n\tto {\r\n\t\ttransform: translateY(0);\r\n\t\topacity: 1;\r\n\t}\r\n}\r\n\r\n@keyframes slideDown {\r\n\tfrom {\r\n\t\ttransform: translateY(0);\r\n\t\topacity: 1;\r\n\t}\r\n\tto {\r\n\t\ttransform: translateY(100%);\r\n\t\topacity: 0;\r\n\t}\r\n}\r\n\r\n#invitePopup {\r\n\tposition: absolute;\r\n\ttext-align: center;\r\n\tanimation: slideUp 200ms ease-out;\r\n\topacity: 1;\r\n\tmargin-bottom: 0;\r\n\tbottom: 5.25rem;\r\n}\r\n\r\n#invitePopup.hide {\r\n\tanimation: slideDown 200ms ease-out;\r\n\topacity: 0;\r\n}", "import { jsx } from '@jsx';\r\nimport { Room } from '../../../../data/room';\r\nimport { User } from '../../../../data/user';\r\nimport { Style } from '@html/components/Style';\r\nimport css from './invite.css';\r\n\r\n\r\nexport function InvitePopup(props: { user: User, room: Room })\r\n{\r\n\treturn (\r\n\t\t<div id='invitePopup' class=\"g-box-pop g-foreground\">\r\n\r\n\t\t\t<span style='color: var(--color-accent)'>\r\n\t\t\t\t{props.user.nick + ' '}\r\n\t\t\t</span>\r\n\r\n\t\t\t<span>invited you to room</span>\r\n\r\n\t\t\t<span style='color: var(--color-accent)'>\r\n\t\t\t\t{' ' + props.room.id}\r\n\t\t\t</span>\r\n\r\n\t\t\t<div>\r\n\t\t\t\tDomain:\r\n\t\t\t\t<span style='color: var(--color-accent)'>\r\n\t\t\t\t\t{' ' + props.room.domainName}\r\n\t\t\t\t</span>\r\n\t\t\t</div>\r\n\r\n\t\t\t<div style='display: flex; margin-top: 0.5rem'>\r\n\t\t\t\t<button class='g-big'\r\n\t\t\t\t\tstyle='width: 40%'\r\n\t\t\t\t\tonclick='\r\n\t\t\t\t\t\tinvitePopup.classList.add(\"hide\");\r\n\t\t\t\t\t\tsetTimeout(() => invitePopup.remove(), 200);\r\n\t\t\t\t\t'>{/* Wild */}\r\n\t\t\t\t\tReject\r\n\t\t\t\t</button>\r\n\r\n\t\t\t\t<div style='flex: 1;'></div>\r\n\r\n\t\t\t\t<button class='g-big'\r\n\t\t\t\t\tstyle='width: 40%'\r\n\t\t\t\t\thx-get={'/join/' + props.room.id}\r\n\t\t\t\t\thx-target='#root'\r\n\t\t\t\t\thx-swap='outerHTML'\r\n\t\t\t\t\thx-replace-url='true'>\r\n\t\t\t\t\tJoin\r\n\t\t\t\t</button>\r\n\t\t\t</div>\r\n\r\n\t\t\t<Style css={css} />\r\n\t\t</div>\r\n\t\t\r\n\t)\r\n}", "import { UsersCount } from '@html/pages/room/guesser/UsersCount';\r\nimport { jsx, Fragment, render } from '@jsx';\r\nimport { Article } from '../data/article';\r\nimport { Room } from '../data/room';\r\nimport { User } from '../data/user';\r\nimport { Logger } from '../helpers/logger';\r\nimport { objectLength } from '../helpers/object-length';\r\nimport randomString from '../helpers/random-string';\r\nimport { getSwapString, UsersListItem } from '@html/pages/room/guesser/UsersListItem';\r\nimport { EventSender } from './event-sender';\r\nimport { ArticlesCounter } from '@html/pages/room/guesser/ArticlesCounter';\r\nimport { Home } from '@html/pages/home/Page';\r\nimport { RoomStarted } from '@html/pages/room/started/StartedView';\r\nimport { StartButton } from '@html/pages/room/guesser/StartButton';\r\nimport { InvitePopup } from '@html/pages/room/started/InvitePopup';\r\n\r\n\r\nconst logger = new Logger('RoomsManager');\r\nconst rooms: Map<string, Room> = new Map();\r\n\r\n\r\nfunction notifyUserConnected(user: User): void {\r\n\t\r\n\tconst room = getUserRoom(user.id);\r\n\r\n\tif (room == null)\r\n\t\treturn;\r\n\r\n\tconst swapString = getSwapString(user.id);\r\n\tconst html = render(\r\n\t\t<UsersListItem user={user} room={room} />\r\n\t);\r\n\r\n\tEventSender.send(room.guesserId, swapString, html);\r\n}\r\n\r\nfunction notifyUserDisconnected(user: User): void {\r\n\r\n\tconst room = getUserRoom(user.id);\r\n\r\n\tif (room == null)\r\n\t\treturn;\r\n\r\n\tif (room.currentArticle != -1)\r\n\t\treturn;\r\n\t\r\n\tconst swapString = getSwapString(user.id);\r\n\tconst html = render(\r\n\t\t<UsersListItem user={user} room={room} />\r\n\t);\r\n\r\n\tEventSender.send(room.guesserId, swapString, html);\r\n}\r\n\r\n\r\nfunction createRoom(\r\n\tguesser: User,\r\n\tdomainName: string,\r\n\trules: Room['rules'],\r\n\tusersLimit: number): Room\r\n{\r\n\tconst room: Room = {\r\n\t\tid: findAvailableRoomId(),\r\n\t\tguesserId: guesser.id,\r\n\t\tdomainName,\r\n\t\trules,\r\n\t\tusersLimit,\r\n\t\tarticles: [],\r\n\t\tcreationTime: Date.now(),\r\n\t\tcurrentArticle: -1,\r\n\t\tusers: { [guesser.id]: guesser },\r\n\t\tkicked: []\r\n\t};\r\n\r\n\trooms.set(room.id, room);\r\n\r\n\tlogger.log(`Room created (${room.id})`);\r\n\r\n\treturn room;\r\n}\r\n\r\nfunction getRoom(roomId: string): Room | null {\r\n\treturn rooms.get(roomId) || null;\r\n}\r\n\r\nfunction getUserRoom(userId: User['id']): Room | null {\r\n\r\n\tfor (const room of rooms.values()) {\r\n\t\tif (userId in room.users)\r\n\t\t\treturn room;\r\n\t}\r\n\r\n\treturn null;\r\n\r\n}\r\n\r\nfunction addUserToRoom(room: Room, user: User): void {\r\n\t\r\n\tlogger.log(`Adding user '${user.nick}' to room '${room.id}'`);\r\n\r\n\troom.users[user.id] = user;\r\n\r\n\tconst html = render(\r\n\t\t<>\r\n\t\t\t<UsersCount room={room} />\r\n\t\t\t<UsersListItem user={user} room={room} />\r\n\t\t</>\r\n\t);\r\n\r\n\tEventSender.send(room.guesserId, 'AddUsersListItem', html);\r\n}\r\n\r\nfunction removeUserFromRoom(room: Room, userId: User['id']): void\r\n{\r\n\tconst user = room.users[userId];\r\n\r\n\tif (!user)\r\n\t\tthrow new Error(`No user with id '${userId}' in room '${room.id}'`)\r\n\r\n\tlogger.log(`Removing user (${user.id}) from room (${room.id})`);\r\n\r\n\t// Don't notify if room is already started\r\n\tconst shouldNotifyOthers = room.currentArticle === -1;\r\n\r\n\tdelete room.users[user.id];\r\n\r\n\tif (objectLength(room.users) === 0 || user.id === room.guesserId)\r\n\t{\r\n\t\tif (shouldNotifyOthers && user.id === room.guesserId)\r\n\t\t{\r\n\t\t\tconst html = render(<Home user={user} />);\r\n\t\t\temitToRoom(room, 'Kicked', html);\r\n\t\t}\r\n\r\n\t\tdeleteRoom(room.id);\r\n\t\treturn;\r\n\t}\r\n\r\n\troom.articles = room.articles.filter(article => article.userId != user.id);\r\n\r\n\tif (shouldNotifyOthers)\r\n\t{\r\n\t\tconst html = render(\r\n\t\t\t<>\r\n\t\t\t\t<StartButton room={room} />\r\n\t\t\t\t<ArticlesCounter room={room} />\r\n\t\t\t\t<UsersCount room={room} />\r\n\t\t\t</>\r\n\t\t);\r\n\t\r\n\t\tEventSender.send(room.guesserId, getSwapString(user.id), html);\r\n\t}\r\n}\r\n\r\nfunction isUserInRoom(room: Room, userId: User['id']): boolean {\r\n\treturn userId in room.users;\r\n}\r\n\r\nfunction kickUserFromRoom(room: Room, userId: User['id'])\r\n{\r\n\tif (room.kicked.includes(userId))\r\n\t\treturn;\r\n\r\n\tconst user = room.users[userId];\r\n\r\n\tif (!user)\r\n\t\treturn;\r\n\r\n\tremoveUserFromRoom(room, user.id);\r\n\r\n\troom.kicked.push(user.id);\r\n\t\r\n\tconst html = render(<Home user={user} />);\r\n\tEventSender.send(user.id, 'Kicked', html);\r\n}\r\n\r\nfunction addArticleToUserInRoom(room: Room, userId: User['id'], article: Article): void {\r\n\r\n\tconst user = findUserInRoom(room, userId);\r\n\tif (!user)\r\n\t\tthrow new Error('User not in room');\r\n\r\n\tarticle.userId = userId;\r\n\troom.articles.push(article);\r\n\r\n\tconst swapString = getSwapString(user.id);\r\n\tconst html = render(\r\n\t\t<>\r\n\t\t\t<StartButton room={room} />\r\n\t\t\t<ArticlesCounter room={room} />\r\n\t\t\t<UsersListItem user={user} room={room} />\r\n\t\t</>\r\n\t);\r\n\r\n\tEventSender.send(room.guesserId, swapString, html);\r\n}\r\n\r\nfunction startRoom(requestedByUserId: User['id'], room: Room) {\r\n\r\n\tif (requestedByUserId != room.guesserId) // Only the guesser can start\r\n\t\tthrow new Error('Only the guesser can start');\r\n\r\n\tif (room.articles.length == 0)\r\n\t\tthrow new Error('No articles submitted');\r\n\r\n\tif (room.currentArticle != -1)\r\n\t\tthrow new Error('Already started');\r\n\r\n\tlogger.log('Starting room', room.id);\r\n\r\n\troom.currentArticle = Math.floor(Math.random() * room.articles.length);\r\n\r\n\tconst article = room.articles[room.currentArticle];\r\n\tconst html = render(<RoomStarted article={article} room={room} />);\r\n\r\n\t// Guesser's ui is updated when they click the button, so no need to notify them\r\n\temitToRoomExcept(room, 'Started', html, [room.guesserId]);\r\n}\r\n\r\nfunction indexRooms() {\r\n\treturn rooms;\r\n}\r\n\r\nfunction inviteToNewRoom(fromRoom: Room, fromUser: User, toRoom: Room): void\r\n{\r\n\tconst html = render(<InvitePopup user={fromUser} room={toRoom} />);\r\n\temitToRoom(fromRoom, 'Invited', html);\r\n}\r\n\r\nfunction deleteRoom(roomId: Room['id']): void {\r\n\tlogger.log(`Deleting room (${roomId})`);\r\n\trooms.delete(roomId);\r\n}\r\n\r\nfunction emitToRoom(room: Room, eventName: string, html: string): void {\r\n\tfor (const userId in room.users)\r\n\t\tEventSender.send(userId, eventName, html);\r\n}\r\n\r\nfunction emitToRoomExcept(room: Room, eventName: string, html: string, exceptionIds: User['id'][]): void {\r\n\tfor (const userId in room.users)\r\n\t{\r\n\t\tif (exceptionIds.includes(userId))\r\n\t\t\tcontinue;\r\n\r\n\t\tEventSender.send(userId, eventName, html);\r\n\t}\r\n}\r\n\r\nfunction findAvailableRoomId(): string {\r\n\r\n\tconst charset = '0123456789';\r\n\r\n\tlet length = 2;\r\n\tlet id = randomString(length, charset);\r\n\r\n\twhile (id in rooms) {\r\n\t\tlength++;\r\n\t\tid = randomString(length, charset);\r\n\t}\r\n\r\n\treturn id;\r\n}\r\n\r\nfunction findUserInRoom(room: Room, userId: User['id']): User {\r\n\treturn room.users[userId];\r\n}\r\n\r\n\r\nexport const RoomsManager = {\r\n\tnotifyUserConnected,\r\n\tnotifyUserDisconnected,\r\n\tcreateRoom,\r\n\tgetRoom,\r\n\tgetUserRoom,\r\n\taddUserToRoom,\r\n\tremoveUserFromRoom,\r\n\tisUserInRoom,\r\n\tkickUserFromRoom,\r\n\taddArticleToUserInRoom,\r\n\tstartRoom,\r\n\tindexRooms,\r\n\tinviteToNewRoom,\r\n};\r\n", "import { jsx } from '@jsx';\r\nimport { OpenExternal } from '@html/icons';\r\nimport { ItemSuggestion } from '../../../../articles/articles-helper';\r\n\r\nexport function SuggestionsListItem(props: ItemSuggestion)\r\n{\r\n\treturn (\r\n\t\t<li onclick={`suggestionLink.value = '${props.id}'`}>\r\n\t\t\t<span style='flex: 1;'>{props.title}</span>\r\n\t\t\t<a href={props.search} target='_blank' style='color: inherit; align-self: flex-start;'>\r\n\t\t\t\t<button style='width: 2em; height: 2em; padding: 0.1em;'>\r\n\t\t\t\t\t<OpenExternal />\r\n\t\t\t\t</button>\r\n\t\t\t</a>\r\n\t\t</li>\r\n\t);\r\n}", "import { jsx } from '@jsx';\r\nimport { Article } from '../../../../data/article';\r\nimport { Room } from '../../../../data/room';\r\nimport { ArticleTitle } from '@html/ArticleTitle';\r\nimport * as Icons from '@html/icons';\r\n\r\ninterface ArticleSubmittedProps {\r\n\troom: Room;\r\n\tarticle: Article;\r\n}\r\n\r\nexport function ArticleSubmitted(props: ArticleSubmittedProps)\r\n{\r\n\tconst style = /*style*/`\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: column;\r\n\t\tjustify-content: center;\r\n\t\theight: 100%;\r\n\t\ttext-align: center;\r\n\t`;\r\n\t\r\n\treturn (\r\n\t\t<div style={style}>\r\n\t\t\t<div class=\"g-box\">\r\n\t\t\t\t<div>You submitted</div>\r\n\t\t\t\t<span>\r\n\t\t\t\t\t<a href={props.article.link} target='_blank' style='color: inherit'>\r\n\t\t\t\t\t\t<button style='display: flex; margin: auto; align-items: center; padding: 0.5rem'>\r\n\r\n\t\t\t\t\t\t\t<ArticleTitle article={props.article}\r\n\t\t\t\t\t\t\t\tpreserveStyle={props.room.rules.preserveTitleStyle as boolean}/>\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t<Icons.OpenExternal style='width: 1.5rem; height: 1.5rem; margin-left: 0.25rem;'/>\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t</a>\r\n\t\t\t\t</span>\r\n\t\t\t</div>\r\n\t\t\t<br />\r\n\t\t\t<div>Waiting room start...</div>\r\n\t\t</div>\r\n\t);\r\n}", "import { jsx } from '@jsx';\r\nimport { Room } from '../../../data/room';\r\nimport * as Icons from '@html/icons';\r\n\r\nexport interface RoomHeaderProps {\r\n\troom: Room;\r\n}\r\n\r\nexport function RoomHeader(props: RoomHeaderProps) {\r\n\treturn (\r\n\t\t<header class='g-box g-foreground g-round-header-corners' style='display: flex;'>\r\n\r\n\t\t\t<div style='flex: 1;'>\r\n\t\t\t\t<div style='font-weight: 700;'>\r\n\t\t\t\t\tRoom \r\n\t\t\t\t\t<span style='color: var(--color-accent); opacity: 0.8;'>\r\n\t\t\t\t\t\t{' ' + props.room.id} ({props.room.domainName})\r\n\t\t\t\t\t</span>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<div style='font-size: 85%;'>\r\n\t\t\t\t\tCreated <span id='time'>X seconds ago</span>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\r\n\t\t\t<button style='width: 2.5em;'\r\n\t\t\t\thx-post='/leave'\r\n\t\t\t\thx-target='#root'\r\n\t\t\t\thx-swap='outerHTML'\r\n\t\t\t\thx-replace-url='true'>\r\n\t\t\t\t<Icons.Exit style='width: 1.25rem; height: 1.25rem;' />\r\n\t\t\t</button>\r\n\r\n\t\t</header>\r\n\t);\r\n}\r\n", "#suggestionLink {\r\n\tfont-size: 90%;\r\n}\r\n\r\n\r\nsection.submit {\r\n    display: flex;\r\n    flex-direction: column;\r\n    gap: 0.5rem;\r\n    text-align: center;\r\n\tflex: 1;\r\n    justify-content: center;\r\n}\r\n\r\nsection.submit form {\r\n    display: flex;\r\n    flex-direction: column;\r\n    gap: 0.5rem;\r\n}\r\n\r\n\r\nsection.suggestions {\r\n\toverflow: hidden;\r\n}\r\n\r\n#suggestions {\r\n    list-style: none;\r\n    padding: 0;\r\n    margin: 0;\r\n    margin-top: 0.5em;\r\n    width: 100%;\r\n    height: 42vh;\r\n    overflow-y: auto;\r\n}\r\n\r\n#suggestions > li {\r\n    display: flex;\r\n    align-items: center;\r\n    background-color: #00000010;\r\n    margin-top: 0.2em;\r\n    border-radius: 0.3em;\r\n    padding: 0.3em;\r\n}", "import { jsx, Fragment } from '@jsx';\r\nimport { Room } from '../../../../data/room';\r\nimport { LoadingSpinner } from '@html/components/LoadingSpinner';\r\nimport { ArticleSubmitted } from '@html/pages/room/liar/ArticleSubmitted';\r\nimport { Style } from '@html/components/Style';\r\nimport { ArticlesHelper } from '../../../../articles/articles-helper';\r\nimport { User } from '../../../../data/user';\r\nimport css from './liar.css';\r\n\r\n\r\ninterface LiarViewProps {\r\n\troom: Room;\r\n\tuser: User;\r\n}\r\n\r\n\r\nexport function LiarView(props: LiarViewProps)\r\n{\r\n\tconst article = props.room.articles.find(article => article.userId == props.user.id);\r\n\tconst domain = ArticlesHelper.getDomain(props.room.domainName)!;\r\n\r\n\tif (article)\r\n\t\treturn <ArticleSubmitted room={props.room} article={article} />\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<section class='submit g-box'>\r\n\t\t\t\t\r\n\t\t\t\t<div>Submit {domain.itemName}</div>\r\n\r\n\t\t\t\t<form hx-post='/submit'\r\n\t\t\t\t\thx-target='#room-view'\r\n\t\t\t\t\thx-swap='innerHTML'\r\n\t\t\t\t\thx-trigger='submit'\r\n\t\t\t\t\thx-indicator='#submit-indicator'>\r\n\t\t\t\t\t\r\n\t\t\t\t\t<input class='g-big'\r\n\t\t\t\t\t\ttype='text'\r\n\t\t\t\t\t\tid='suggestionLink'\r\n\t\t\t\t\t\tname='link'\r\n\t\t\t\t\t\tplaceholder={domain.submitInputPlaceholder}\r\n\t\t\t\t\t\trequired />\r\n\r\n\t\t\t\t\t<button class='g-big'>Submit</button>\r\n\t\t\t\t</form>\r\n\t\t\t</section>\r\n\t\t\t\r\n\t\t\t<section class='suggestions g-box g-foreground'>\r\n\t\t\t\t<div style='display: flex'>\r\n\t\t\t\t\t<span style='flex: 1'>Suggestions</span>\r\n\t\t\t\t\t<button hx-get='/suggestions'\r\n\t\t\t\t\t\thx-target='#suggestions'\r\n\t\t\t\t\t\thx-swap='innerHTML'\r\n\t\t\t\t\t\thx-trigger='mousedown, load'\r\n\t\t\t\t\t\thx-indicator='#suggestions-indicator'>\r\n\t\t\t\t\t\tReroll\r\n\t\t\t\t\t</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t\r\n\t\t\t\t<div style='position: relative'>\r\n\t\t\t\t\t<ul id='suggestions'></ul>\r\n\t\t\t\t\t<LoadingSpinner id='suggestions-indicator' />\r\n\t\t\t\t</div>\r\n\t\t\t</section>\r\n\r\n\t\t\t<LoadingSpinner id='submit-indicator' />\r\n\t\t\t\r\n\t\t\t<Style css={css} />\r\n\t\t</>\r\n\t);\r\n}", "import { jsx, Fragment } from '@jsx';\r\nimport { Room } from '../../../../data/room';\r\nimport { UsersListItem } from '@html/pages/room/guesser/UsersListItem';\r\nimport { UsersCount } from '@html/pages/room/guesser/UsersCount';\r\n\r\nexport function UsersList(props: { room: Room })\r\n{\r\n\tconst { room } = props;\r\n\tconst users = Object.values(room.users);\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<UsersCount room={room} swappingExistent={false} />\r\n\r\n\t\t\t<ul>\r\n\t\t\t\t{users.map(user =>\r\n\t\t\t\t\t<UsersListItem user={user} room={room} />\r\n\t\t\t\t)}\r\n\t\t\t\t<div hidden sse-swap='AddUsersListItem' hx-swap='beforebegin'></div>\r\n\t\t\t</ul>\r\n\t\t</>\r\n\t);\r\n}", "section.center {\r\n\tposition: relative;\r\n\tflex: 1;\r\n\twidth: 100%;\r\n\tdisplay: flex;\r\n\tflex-direction: column;\r\n\tgap: 1em;\r\n\tjustify-content: center;\r\n\talign-items: center;\r\n}\r\n\r\nsection.center > button.start {\r\n\twidth: 10rem;\r\n}\r\n\r\n\r\n#articles-counter {\r\n\tfont-weight: 700;\r\n\tcolor: var(--color-accent);\r\n}\r\n\r\n\r\nsection > span {\r\n\tdisplay: block;\r\n\ttext-align: center;\r\n\twidth: 100%;\r\n\tfont-weight: 700;\r\n}\r\n\r\n\r\nsection.users > ul {\r\n\theight: 12em;\r\n\toverflow-y: auto;\r\n\tmargin-top: 0.5em;\r\n\tpadding: 0;\r\n\tmargin: 0;\r\n}\r\n\r\nsection.users > ul > li {\r\n\tmargin-top: 0.5rem;\r\n}\r\n\r\nsection.users > ul > li > div {\r\n\tdisplay: flex;\r\n    align-items: center;\r\n\tbackground: var(--color-background);\r\n    border-radius: var(--radius-common);\r\n    padding: 0.25rem 0.5rem;\r\n}\r\n\r\n\r\nsection.users > ul > li .kick {\r\n\tflex: 1;\r\n\tcolor: var(--color-bad);\r\n\ttext-align: end;\r\n}\r\n\r\nsection.users > ul > li.guesser .kick {\r\n\tdisplay: none;\r\n}\r\n\r\nsection.users > ul > li .guesser-label {\r\n\tflex: 1;\r\n\tdisplay: none;\r\n\tfont-size: 80%;\r\n\tcolor: var(--color-accent);\r\n\ttext-align: end;\r\n}\r\n\r\nsection.users > ul > li.guesser .guesser-label {\r\n\tdisplay: initial;\r\n}\r\n\r\nsection.users > ul > li.guesser {\r\n\torder: -1;\r\n}\r\n\r\nsection.users > ul > li.disconnected {\r\n\ttext-decoration: line-through;\r\n}\r\n\r\n\r\nsection.invite > div {\r\n\tdisplay: flex;\r\n\twidth: 100%;\r\n\tmargin-top: 0.5em;\r\n\tgap: 0.5rem;\r\n}\r\n\r\nsection.invite > div > input {\r\n\tflex: 1;\r\n}\r\n\r\n\r\n#invite-link {\r\n\tfont-size: 90%;\r\n}\r\n\r\n#copy-invite-button {\r\n\tpadding: 0.5rem;\r\n}", "import { UsersList } from '@html/pages/room/guesser/UsersList';\r\nimport { Style } from '@html/components/Style';\r\nimport { Room } from '../../../../data/room';\r\nimport { jsx, Fragment } from '@jsx';\r\nimport { ArticlesCounter } from '@html/pages/room/guesser/ArticlesCounter';\r\nimport { StartButton } from '@html/pages/room/guesser/StartButton';\r\nimport css from './guesser.css';\r\n\r\nexport function GuesserView(props: { room: Room })\r\n{\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<section class='center'>\r\n\t\t\t\t<ArticlesCounter\r\n\t\t\t\t\troom={props.room}\r\n\t\t\t\t\tswappingExistent={false}\r\n\t\t\t\t/>\r\n\t\t\t\t<StartButton room={props.room} swappingExistent={false} />\r\n\t\t\t</section>\r\n\t\t\t\r\n\t\t\t<section class='users g-box-pop g-foreground'>\r\n\t\t\t\t<UsersList room={props.room} />\r\n\t\t\t</section>\r\n\r\n\t\t\t<section class='invite g-box g-foreground g-round-footer-corners'>\r\n\t\t\t\t<span>Invite</span>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<input type='text' id='invite-link'/>\r\n\t\t\t\t\t<button id='copy-invite-button'>Copy</button>\r\n\t\t\t\t</div>\r\n\t\t\t</section>\r\n\r\n\t\t\t<Style css={css} />\r\n\t\t</>\r\n\t);\r\n}", "import { jsx } from '@jsx';\r\nimport { importText } from '../../helpers/import-text';\r\n\r\n/** Inline JS */\r\nexport function Script(props: { src: string }) {\r\n\treturn <script DANGEROUSLY_SET_INNER_HTML={importText(props.src)}></script>\r\n}", "import { jsx } from '@jsx';\r\n\r\nconst indent = false;\r\n\r\n/** Inline JSON for use like `JSON.parse(document.getElementById(...).textContent)` */\r\nexport function Json(props: { id: string, data: unknown }) {\r\n\r\n\tconst json = indent\r\n\t\t? JSON.stringify(props.data, null, '\\t')\r\n\t\t: JSON.stringify(props.data);\r\n\r\n\treturn (\r\n\t\t<script id={props.id}\r\n\t\t\ttype='application/json'\r\n\t\t\tDANGEROUSLY_SET_INNER_HTML={json}>\r\n\t\t</script>\r\n\t);\r\n}", "import { Room } from '../../../data/room';\r\nimport { jsx } from '@jsx';\r\nimport { ArticlesHelper } from '../../../articles/articles-helper';\r\n\r\n\r\nexport function RulesPopup(props: { room: Room })\r\n{\r\n\tconst rules = Object.entries(props.room.rules);\r\n\r\n\treturn (\r\n\t\t<div id='rulesPopup' hx-on:click='this.hidden = true' hidden>\r\n\t\t\t<div class='g-box-pop g-foreground'>\r\n\t\t\t\t\r\n\t\t\t\t<span>Rules</span>\r\n\r\n\t\t\t\t{rules.map(([id, value]) =>\r\n\t\t\t\t\t<InputForRule domainName={props.room.domainName} id={id} value={value} />\r\n\t\t\t\t)}\r\n\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nfunction InputForRule(props: { domainName: string, id: string, value: boolean })\r\n{\r\n\tconst rule = ArticlesHelper.getRule(props.domainName, props.id);\r\n\r\n\treturn (\r\n\t\t<label>\r\n\t\t\t<input type='checkbox' disabled checked={props.value || undefined} />\r\n\t\t\t{' ' + rule.name}\r\n\t\t</label>\r\n\t);\r\n}", "import { RoomHeader } from '@html/pages/room/RoomHeader';\r\nimport { Root } from '@html/Root';\r\nimport { LiarView } from '@html/pages/room/liar/LiarView';\r\nimport { GuesserView } from '@html/pages/room/guesser/GuesserView';\r\nimport { Script } from '@html/components/Script';\r\nimport { Room as TRoom } from '../../../data/room';\r\nimport { jsx } from '@jsx';\r\nimport { Json } from '@html/components/Json';\r\nimport { RoomStarted } from '@html/pages/room/started/StartedView';\r\nimport { RulesPopup } from '@html/pages/room/RulesPopup';\r\nimport { User } from '../../../data/user';\r\nimport { join } from 'path';\r\nimport { Style } from '@html/components/Style';\r\nimport css from './style.css';\r\n\r\n\r\ninterface RoomProps {\r\n\troom: TRoom;\r\n\tuser: User;\r\n}\r\n\r\n\r\nexport function Room(props: RoomProps)\r\n{\r\n\tconst { room, user } = props;\r\n\r\n\tconst dataForClient = {\r\n\t\troomId: room.id,\r\n\t\troomCreationTime: room.creationTime,\r\n\t\tisGuesser: user.id === room.guesserId,\r\n\t};\r\n\r\n\tlet View;\r\n\r\n\tif (room.currentArticle != -1)\r\n\t\tView = <RoomStarted room={room} article={room.articles[room.currentArticle]} />;\r\n\telse if (props.user.id == room.guesserId)\r\n\t\tView = <GuesserView {...props} />;\r\n\telse\r\n\t\tView = <LiarView {...props} />;\r\n\r\n\treturn (\r\n\t\t<Root title='Mo\u00FEFAL - Room' user={user}>\r\n\t\t\t<Json id='data' data={dataForClient} />\r\n\r\n\t\t\t<RoomHeader {...props} />\r\n\r\n\t\t\t<main>\r\n\t\t\t\t<button class='rules' hx-on:click='rulesPopup.hidden = false'>\r\n\t\t\t\t\tRules\r\n\t\t\t\t</button>\r\n\r\n\t\t\t\t<div id='room-view'>\r\n\t\t\t\t\t{View}\r\n\t\t\t\t</div>\r\n\t\t\t</main>\r\n\r\n\t\t\t<RulesPopup {...props} />\r\n\r\n\t\t\t<Script src={join(process.cwd(), 'static/scripts/room/script.js')} />\r\n\t\t\t<Style css={css} />\r\n\r\n\t\t\t<div hidden sse-swap='Kicked' hx-target='#root' hx-swap='outerHTML'></div>\r\n\t\t\t<div hidden sse-swap='Started' hx-target='#room-view'></div>\r\n\t\t\t<div hidden sse-swap='Invited' hx-target='main' hx-swap='beforeend'></div>\r\n\t\t</Root>\r\n\t);\r\n}\r\n", "#room-view {\r\n    position: relative;\r\n    flex: 1;\r\n    display: flex;\r\n    flex-direction: column;\r\n}\r\n\r\n\r\nbutton.rules {\r\n\tmargin: 0.5rem;\r\n\tborder-radius: 0;\r\n\tborder-bottom-right-radius: var(--radius-common);\r\n\twidth: 4rem;\r\n}\r\n\r\n\r\n#rulesPopup {\r\n\tposition: fixed;\r\n\tleft: 0;\r\n\ttop: 0;\r\n\twidth: 100%;\r\n\theight: 100%;\r\n\tbackground-color: #00000020;\r\n}\r\n\r\n#rulesPopup > div {\r\n\tdisplay: flex;\r\n\tflex-direction: column;\r\n\tgap: 0.5rem;\r\n}\r\n\r\n#rulesPopup > div > div {\r\n\ttext-align: center;\r\n}", "import { Request, Response, NextFunction } from 'express';\r\nimport { router as gameRouter } from './routers/game-router';\r\nimport { EventSender } from './managers/event-sender';\r\nimport { env } from './helpers/env';\r\nimport express from 'express';\r\nimport cookieParser from 'cookie-parser';\r\nimport 'express-async-errors';\r\n\r\n\r\nconst port = parseInt(env('PORT', '3001'));\r\nconst app = express();\r\n\r\n// Global error handler\r\napp.use((error: any, req: Request, res: Response, next: NextFunction) => {\r\n\tconsole.error(`[${req.path}] Error:`, error);\r\n\tres.status(500)\r\n\tres.send('Something went wrong!');\r\n\tnext();\r\n});\r\n\r\napp.use(cookieParser())\r\napp.use(gameRouter);\r\napp.use(EventSender.router);\r\napp.use(express.static('static'));\r\n\r\napp.listen(port, () => console.log('Listening on port', port));"],
  "mappings": "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",
  "names": ["Router", "indent", "style_default", "style_default", "id", "Axios", "apiBaseUrl", "axios", "getArticle", "id", "getRandomArticles", "Axios", "apiBaseUrl", "axios", "getArticle", "id", "getTitleFromId", "getRandomArticles", "getArticle", "getRandomArticles", "id", "style_default", "style_default", "secret", "id", "Check", "capitalCase", "id", "id", "logger", "id", "article", "id", "join", "style_default", "join", "style_default", "router", "Router", "limitUsers", "id", "article", "router"]
}
